[2024-03-03T20:01:15.169983+00:00] request.INFO: Matched route "app_notifications_mark_as_read". {"route":"app_notifications_mark_as_read","route_parameters":{"_route":"app_notifications_mark_as_read","_controller":"App\\Controller\\NotificationController::markNotificationsAsRead"},"request_uri":"http://localhost:8000/notifications/mark-as-read","method":"POST"} []
[2024-03-03T20:01:15.206829+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:01:15.206931+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:01:15.322661+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:01:15.329216+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:01:15.363440+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:01:15.363621+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:01:15.363719+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:01:15.363802+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:01:15.368728+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:01:15.368941+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:01:15.371766+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:01:15.371975+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:01:15.372058+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:01:15.388356+00:00] app.INFO: Received request: [] []
[2024-03-03T20:01:15.399366+00:00] request.CRITICAL: Uncaught PHP Exception Doctrine\ORM\Exception\MissingIdentifierField: "The identifier id is missing for a query of App\Entity\Notification" at MissingIdentifierField.php line 15 {"exception":"[object] (Doctrine\\ORM\\Exception\\MissingIdentifierField(code: 0): The identifier id is missing for a query of App\\Entity\\Notification at C:\\Users\\21696\\Documents\\SwiftWheels\\backend\\vendor\\doctrine\\orm\\src\\Exception\\MissingIdentifierField.php:15)"} []
[2024-03-03T20:01:15.469182+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:01:15.473103+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:01:15.629192+00:00] request.INFO: Matched route "app_message_by_id". {"route":"app_message_by_id","route_parameters":{"_route":"app_message_by_id","_controller":"App\\Controller\\MessageController::getMessageById","id":"43"},"request_uri":"http://localhost:8000/messages/id/43","method":"GET"} []
[2024-03-03T20:01:15.662357+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:01:15.662513+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:01:15.776392+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:01:15.782071+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:01:15.801687+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:01:15.801811+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:01:15.801894+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:01:15.801964+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:01:15.805591+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:01:15.805790+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:01:15.809072+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:01:15.809185+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:01:15.809249+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:01:15.826977+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.title AS title_2, t0.photo_url AS photo_url_3, t0.content AS content_4, t0.sender_id AS sender_id_5, t0.receiver_id AS receiver_id_6 FROM message t0 WHERE t0.id = ? (parameters: array{"1":43}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.title AS title_2, t0.photo_url AS photo_url_3, t0.content AS content_4, t0.sender_id AS sender_id_5, t0.receiver_id AS receiver_id_6 FROM message t0 WHERE t0.id = ?","params":{"1":43},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:01:15.842055+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? (parameters: array{"1":7}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ?","params":{"1":7},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:01:15.850767+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:01:15.857127+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:03:19.066053+00:00] request.INFO: Matched route "app_notifications_unread". {"route":"app_notifications_unread","route_parameters":{"_route":"app_notifications_unread","_controller":"App\\Controller\\NotificationController::getUnreadNotifications"},"request_uri":"http://localhost:8000/notifications","method":"GET"} []
[2024-03-03T20:03:19.321027+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:03:19.321137+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:03:19.519503+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:03:19.543159+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:03:19.562213+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:03:19.562313+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:03:19.562368+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:03:19.562418+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:03:19.566941+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:03:19.567118+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:03:19.573033+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:03:19.573178+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:03:19.573350+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:03:19.640561+00:00] doctrine.DEBUG: Executing statement: SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.receiver_id AS receiver_id_5 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ? (parameters: array{"1":8,"2":0}, types: array{"1":0,"2":0}) {"sql":"SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.receiver_id AS receiver_id_5 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ?","params":{"1":8,"2":0},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:03:19.645151+00:00] app.INFO: Unread Notifications: [{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]}] []
[2024-03-03T20:03:19.652198+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:03:19.656848+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:03:22.126109+00:00] request.INFO: Matched route "app_message_by_id". {"route":"app_message_by_id","route_parameters":{"_route":"app_message_by_id","_controller":"App\\Controller\\MessageController::getMessageById","id":"43"},"request_uri":"http://localhost:8000/messages/id/43","method":"GET"} []
[2024-03-03T20:03:22.359650+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:03:22.359820+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:03:22.558883+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:03:22.835996+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:03:23.661585+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:03:23.661757+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:03:23.661866+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:03:23.662051+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:03:23.666169+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:03:23.666358+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:03:23.668797+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:03:23.668939+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:03:23.669006+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:03:24.963742+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.title AS title_2, t0.photo_url AS photo_url_3, t0.content AS content_4, t0.sender_id AS sender_id_5, t0.receiver_id AS receiver_id_6 FROM message t0 WHERE t0.id = ? (parameters: array{"1":43}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.title AS title_2, t0.photo_url AS photo_url_3, t0.content AS content_4, t0.sender_id AS sender_id_5, t0.receiver_id AS receiver_id_6 FROM message t0 WHERE t0.id = ?","params":{"1":43},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:03:25.419389+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? (parameters: array{"1":7}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ?","params":{"1":7},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:03:25.435143+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:03:25.442075+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:03:25.681170+00:00] request.INFO: Matched route "app_notifications_mark_as_read". {"route":"app_notifications_mark_as_read","route_parameters":{"_route":"app_notifications_mark_as_read","_controller":"App\\Controller\\NotificationController::markNotificationsAsRead"},"request_uri":"http://localhost:8000/notifications/mark-as-read","method":"POST"} []
[2024-03-03T20:03:25.719510+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:03:25.719604+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:03:25.848575+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:03:25.854272+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:03:25.872591+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:03:25.872711+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:03:25.872772+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:03:25.872827+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:03:25.876006+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:03:25.876093+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:03:25.878218+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:03:25.878301+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:03:25.878421+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:03:25.898081+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.message AS message_2, t0.is_read AS is_read_3, t0.message_id AS message_id_4, t0.message_title AS message_title_5, t0.receiver_id AS receiver_id_6 FROM notification t0 WHERE t0.id = ? (parameters: array{"1":18}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.message AS message_2, t0.is_read AS is_read_3, t0.message_id AS message_id_4, t0.message_title AS message_title_5, t0.receiver_id AS receiver_id_6 FROM notification t0 WHERE t0.id = ?","params":{"1":18},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:03:25.900520+00:00] doctrine.DEBUG: Beginning transaction [] []
[2024-03-03T20:03:25.903633+00:00] doctrine.DEBUG: Executing statement: UPDATE notification SET is_read = ? WHERE id = ? (parameters: array{"1":1,"2":18}, types: array{"1":0,"2":0}) {"sql":"UPDATE notification SET is_read = ? WHERE id = ?","params":{"1":1,"2":18},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:03:25.910338+00:00] doctrine.DEBUG: Committing transaction [] []
[2024-03-03T20:03:25.920130+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:03:25.923994+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:03:36.667969+00:00] request.INFO: Matched route "app_notifications_unread". {"route":"app_notifications_unread","route_parameters":{"_route":"app_notifications_unread","_controller":"App\\Controller\\NotificationController::getUnreadNotifications"},"request_uri":"http://localhost:8000/notifications","method":"GET"} []
[2024-03-03T20:03:36.694879+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:03:36.694974+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:03:36.810696+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:03:36.816456+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:03:36.837746+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:03:36.837876+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:03:36.837969+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:03:36.838039+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:03:36.840954+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:03:36.841044+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:03:36.843466+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:03:36.843606+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:03:36.843687+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:03:36.887359+00:00] doctrine.DEBUG: Executing statement: SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.receiver_id AS receiver_id_5 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ? (parameters: array{"1":8,"2":0}, types: array{"1":0,"2":0}) {"sql":"SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.receiver_id AS receiver_id_5 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ?","params":{"1":8,"2":0},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:03:36.890855+00:00] app.INFO: Unread Notifications: [{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]}] []
[2024-03-03T20:03:36.896875+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:03:36.900081+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:03:46.668659+00:00] request.INFO: Matched route "app_messages_received". {"route":"app_messages_received","route_parameters":{"_route":"app_messages_received","_controller":"App\\Controller\\MessageController::getMessagesForUser","receiverUsername":"user2"},"request_uri":"http://localhost:8000/messages/user/user2","method":"GET"} []
[2024-03-03T20:03:46.692166+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:03:46.692300+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:03:46.809781+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:03:46.835874+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:03:46.851717+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:03:46.851906+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:03:46.851993+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:03:46.852057+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:03:46.854990+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:03:46.855104+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:03:46.857036+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:03:46.857238+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:03:46.857308+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:03:46.871168+00:00] app.INFO: Receiver Username: user2 [] []
[2024-03-03T20:03:46.871357+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:03:46.872841+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.title AS title_2, t0.photo_url AS photo_url_3, t0.content AS content_4, t0.sender_id AS sender_id_5, t0.receiver_id AS receiver_id_6 FROM message t0 WHERE t0.receiver_id = ? (parameters: array{"1":8}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.title AS title_2, t0.photo_url AS photo_url_3, t0.content AS content_4, t0.sender_id AS sender_id_5, t0.receiver_id AS receiver_id_6 FROM message t0 WHERE t0.receiver_id = ?","params":{"1":8},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:03:46.884907+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? (parameters: array{"1":7}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ?","params":{"1":7},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:03:46.893152+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:03:46.899270+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:03:50.530938+00:00] request.INFO: Matched route "app_notifications_unread". {"route":"app_notifications_unread","route_parameters":{"_route":"app_notifications_unread","_controller":"App\\Controller\\NotificationController::getUnreadNotifications"},"request_uri":"http://localhost:8000/notifications","method":"GET"} []
[2024-03-03T20:03:50.570414+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:03:50.570541+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:03:50.712437+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:03:50.740981+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:03:50.759749+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:03:50.759874+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:03:50.759931+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:03:50.759982+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:03:50.763666+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:03:50.763825+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:03:50.766566+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:03:50.766715+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:03:50.766774+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:03:50.813174+00:00] doctrine.DEBUG: Executing statement: SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.receiver_id AS receiver_id_5 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ? (parameters: array{"1":8,"2":0}, types: array{"1":0,"2":0}) {"sql":"SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.receiver_id AS receiver_id_5 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ?","params":{"1":8,"2":0},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:03:50.818872+00:00] app.INFO: Unread Notifications: [{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]}] []
[2024-03-03T20:03:50.828106+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:03:50.833583+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:26:05.638825+00:00] request.INFO: Matched route "app_notifications_unread". {"route":"app_notifications_unread","route_parameters":{"_route":"app_notifications_unread","_controller":"App\\Controller\\NotificationController::getUnreadNotifications"},"request_uri":"http://localhost:8000/notifications","method":"GET"} []
[2024-03-03T20:26:05.700823+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:26:05.700914+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:26:05.878006+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:26:05.907334+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:26:05.942057+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:26:05.942147+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:26:05.942195+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:26:05.942238+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:26:05.946614+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:26:05.946692+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:26:05.952629+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:26:05.952721+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:26:05.952776+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:26:06.016735+00:00] doctrine.DEBUG: Executing statement: SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.receiver_id AS receiver_id_5 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ? (parameters: array{"1":8,"2":0}, types: array{"1":0,"2":0}) {"sql":"SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.receiver_id AS receiver_id_5 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ?","params":{"1":8,"2":0},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:26:06.020403+00:00] app.INFO: Unread Notifications: [{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]}] []
[2024-03-03T20:26:06.024882+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:26:06.028358+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:29:28.246419+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:29:28.256801+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-03-03T20:29:28.259310+00:00] doctrine.DEBUG: Executing statement: SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,        c.COLUMN_TYPE       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION (parameters: array{"1":"sw","2":"sw"}, types: array{"1":0,"2":0}) {"sql":"SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,\r\n       c.COLUMN_TYPE       AS type,\r\n       c.IS_NULLABLE        AS `null`,\r\n       c.COLUMN_KEY         AS `key`,\r\n       c.COLUMN_DEFAULT     AS `default`,\r\n       c.EXTRA,\r\n       c.COLUMN_COMMENT     AS comment,\r\n       c.CHARACTER_SET_NAME AS characterset,\r\n       c.COLLATION_NAME     AS collation\r\nFROM information_schema.COLUMNS c\r\n    INNER JOIN information_schema.TABLES t\r\n        ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION","params":{"1":"sw","2":"sw"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:29:28.274105+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"sw"}, types: array{"1":0}) {"sql":"SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,\r\n        INDEX_NAME  AS Key_name,\r\n        COLUMN_NAME AS Column_Name,\r\n        SUB_PART    AS Sub_Part,\r\n        INDEX_TYPE  AS Index_Type\r\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX","params":{"1":"sw"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:29:28.277321+00:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION,             c.UPDATE_RULE,             c.DELETE_RULE FROM information_schema.key_column_usage k INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME WHERE k.TABLE_SCHEMA = ? AND c.CONSTRAINT_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"sw","2":"sw"}, types: array{"1":0,"2":0}) {"sql":"SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,\r\n            k.COLUMN_NAME,\r\n            k.REFERENCED_TABLE_NAME,\r\n            k.REFERENCED_COLUMN_NAME,\r\n            k.ORDINAL_POSITION,\r\n            c.UPDATE_RULE,\r\n            c.DELETE_RULE\r\nFROM information_schema.key_column_usage k\r\nINNER JOIN information_schema.referential_constraints c\r\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\r\nAND c.TABLE_NAME = k.TABLE_NAME WHERE k.TABLE_SCHEMA = ? AND c.CONSTRAINT_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL ORDER BY k.ORDINAL_POSITION","params":{"1":"sw","2":"sw"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:29:28.282282+00:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"sw"}, types: array{"1":0}) {"sql":"    SELECT t.TABLE_NAME,\r\n           t.ENGINE,\r\n           t.AUTO_INCREMENT,\r\n           t.TABLE_COMMENT,\r\n           t.CREATE_OPTIONS,\r\n           t.TABLE_COLLATION,\r\n           ccsa.CHARACTER_SET_NAME\r\n      FROM information_schema.TABLES t\r\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\r\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"sw"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:29:28.292087+00:00] doctrine.DEBUG: Executing query: SELECT @@character_set_database, @@collation_database {"sql":"SELECT @@character_set_database, @@collation_database"} []
[2024-03-03T20:29:28.293086+00:00] doctrine.DEBUG: Executing statement: SELECT DEFAULT_COLLATE_NAME FROM information_schema.CHARACTER_SETS WHERE CHARACTER_SET_NAME = ?; (parameters: array{"1":"utf8mb4"}, types: array{"1":0}) {"sql":"SELECT DEFAULT_COLLATE_NAME\r\nFROM information_schema.CHARACTER_SETS\r\nWHERE CHARACTER_SET_NAME = ?;","params":{"1":"utf8mb4"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:29:28.303548+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-03-03T20:29:28.304209+00:00] doctrine.DEBUG: Executing statement: SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,        c.COLUMN_TYPE       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION (parameters: array{"1":"sw","2":"sw"}, types: array{"1":0,"2":0}) {"sql":"SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,\r\n       c.COLUMN_TYPE       AS type,\r\n       c.IS_NULLABLE        AS `null`,\r\n       c.COLUMN_KEY         AS `key`,\r\n       c.COLUMN_DEFAULT     AS `default`,\r\n       c.EXTRA,\r\n       c.COLUMN_COMMENT     AS comment,\r\n       c.CHARACTER_SET_NAME AS characterset,\r\n       c.COLLATION_NAME     AS collation\r\nFROM information_schema.COLUMNS c\r\n    INNER JOIN information_schema.TABLES t\r\n        ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION","params":{"1":"sw","2":"sw"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:29:28.310379+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"sw"}, types: array{"1":0}) {"sql":"SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,\r\n        INDEX_NAME  AS Key_name,\r\n        COLUMN_NAME AS Column_Name,\r\n        SUB_PART    AS Sub_Part,\r\n        INDEX_TYPE  AS Index_Type\r\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX","params":{"1":"sw"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:29:28.312254+00:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION,             c.UPDATE_RULE,             c.DELETE_RULE FROM information_schema.key_column_usage k INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME WHERE k.TABLE_SCHEMA = ? AND c.CONSTRAINT_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"sw","2":"sw"}, types: array{"1":0,"2":0}) {"sql":"SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,\r\n            k.COLUMN_NAME,\r\n            k.REFERENCED_TABLE_NAME,\r\n            k.REFERENCED_COLUMN_NAME,\r\n            k.ORDINAL_POSITION,\r\n            c.UPDATE_RULE,\r\n            c.DELETE_RULE\r\nFROM information_schema.key_column_usage k\r\nINNER JOIN information_schema.referential_constraints c\r\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\r\nAND c.TABLE_NAME = k.TABLE_NAME WHERE k.TABLE_SCHEMA = ? AND c.CONSTRAINT_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL ORDER BY k.ORDINAL_POSITION","params":{"1":"sw","2":"sw"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:29:28.314908+00:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"sw"}, types: array{"1":0}) {"sql":"    SELECT t.TABLE_NAME,\r\n           t.ENGINE,\r\n           t.AUTO_INCREMENT,\r\n           t.TABLE_COMMENT,\r\n           t.CREATE_OPTIONS,\r\n           t.TABLE_COLLATION,\r\n           ccsa.CHARACTER_SET_NAME\r\n      FROM information_schema.TABLES t\r\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\r\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"sw"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:29:28.318149+00:00] doctrine.DEBUG: Executing statement: SELECT DEFAULT_COLLATE_NAME FROM information_schema.CHARACTER_SETS WHERE CHARACTER_SET_NAME = ?; (parameters: array{"1":"utf8mb4"}, types: array{"1":0}) {"sql":"SELECT DEFAULT_COLLATE_NAME\r\nFROM information_schema.CHARACTER_SETS\r\nWHERE CHARACTER_SET_NAME = ?;","params":{"1":"utf8mb4"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:29:28.319773+00:00] doctrine.DEBUG: Executing statement: ALTER TABLE message ADD CONSTRAINT FK_B6BD307FF624B39D FOREIGN KEY (sender_id) REFERENCES user (id) {"sql":"ALTER TABLE message ADD CONSTRAINT FK_B6BD307FF624B39D FOREIGN KEY (sender_id) REFERENCES user (id)"} []
[2024-03-03T20:29:28.383233+00:00] doctrine.DEBUG: Executing statement: ALTER TABLE message ADD CONSTRAINT FK_B6BD307FCD53EDB6 FOREIGN KEY (receiver_id) REFERENCES user (id) {"sql":"ALTER TABLE message ADD CONSTRAINT FK_B6BD307FCD53EDB6 FOREIGN KEY (receiver_id) REFERENCES user (id)"} []
[2024-03-03T20:29:28.440334+00:00] doctrine.DEBUG: Executing statement: ALTER TABLE notification ADD CONSTRAINT FK_BF5476CACD53EDB6 FOREIGN KEY (receiver_id) REFERENCES user (id) {"sql":"ALTER TABLE notification ADD CONSTRAINT FK_BF5476CACD53EDB6 FOREIGN KEY (receiver_id) REFERENCES user (id)"} []
[2024-03-03T20:29:28.497649+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:29:35.986165+00:00] request.INFO: Matched route "app_notifications_unread". {"route":"app_notifications_unread","route_parameters":{"_route":"app_notifications_unread","_controller":"App\\Controller\\NotificationController::getUnreadNotifications"},"request_uri":"http://localhost:8000/notifications","method":"GET"} []
[2024-03-03T20:29:36.055850+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:29:36.055958+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:29:36.236472+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:29:36.264482+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:29:36.298301+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:29:36.298545+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:29:36.298649+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:29:36.298725+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:29:36.304983+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:29:36.305084+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:29:36.309966+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:29:36.310072+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:29:36.310129+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:29:36.373278+00:00] doctrine.DEBUG: Executing statement: SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.created_at AS created_at_5, n0_.receiver_id AS receiver_id_6 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ? (parameters: array{"1":8,"2":0}, types: array{"1":0,"2":0}) {"sql":"SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.created_at AS created_at_5, n0_.receiver_id AS receiver_id_6 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ?","params":{"1":8,"2":0},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:29:36.377857+00:00] app.INFO: Unread Notifications: [{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]}] []
[2024-03-03T20:29:36.384951+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:29:36.389031+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:29:39.549364+00:00] request.INFO: Matched route "app_user". {"route":"app_user","route_parameters":{"_route":"app_user","_controller":"App\\Controller\\UserController::listUsers"},"request_uri":"http://localhost:8000/users","method":"GET"} []
[2024-03-03T20:29:39.581528+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:29:39.581615+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:29:39.712312+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:29:39.736317+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:29:39.752774+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:29:39.752886+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:29:39.752939+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:29:39.752990+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:29:39.755798+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:29:39.755898+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:29:39.757481+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:29:39.757586+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:29:39.757638+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:29:39.773300+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0"} []
[2024-03-03T20:29:39.779044+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:29:39.782430+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:29:43.405543+00:00] request.INFO: Matched route "app_messages". {"route":"app_messages","route_parameters":{"_route":"app_messages","_controller":"App\\Controller\\MessageController::sendMessage"},"request_uri":"http://localhost:8000/messages","method":"POST"} []
[2024-03-03T20:29:43.427443+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:29:43.427524+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:29:43.531014+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:29:43.559803+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:29:43.577547+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:29:43.577655+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:29:43.577711+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:29:43.577844+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:29:43.580062+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:29:43.580138+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:29:43.581781+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:29:43.581872+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:29:43.581924+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:29:43.594544+00:00] app.INFO: Request Headers: {"pragma":["no-cache"],"content-length":["444"],"sec-ch-ua-mobile":["?0"],"sec-fetch-dest":["empty"],"sec-fetch-mode":["cors"],"mod-rewrite":["On"],"authorization":["Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3MDk0OTcyNDYsImV4cCI6MTcwOTUwMDg0Niwicm9sZXMiOltdLCJ1c2VybmFtZSI6InVzZXIyIn0.CawKPz70ev1uCY97id8jC4-F82VoabHMBBtwM71nvyVQc3g0Z93GjkaVOzDoJD9yMibqLKH-vFUiw92ksZzuOzjufiUUMxN_xI8AoDHugvnyuqAza0gbvceVXNMKNwYWxVsU6uOkroy_OFFM2D7DwYHJXE5S-N4OCCHDFBc1PlhMUt4f9YhQjRaSUrufz5gc33K_QRRLYfIsUnKk-7SZdeAI5-tDYEFCdZJEmpWyhWpFl35RRntEiY_dHBGNu33Sm4vvPAF0k3TthsaLBNZg9aK3VHh6xvLBOX6f2a8HFdRip_RbjLyK7Kou_FzFUduUVMG85FPDMZr4LcWkMi2DJhn-bKCxeryD-MNEN0eeU0K9yTL3gHvlhAcv5QJnnx-qoTbhzP9M4INGs02vU7o3j8XoLpFSnieaPS6U7dfp92TaQthD9kmkf_cqNjIm55x6SUMHGxcvaJLx6zuJmy7vNJlkeKeoGvTW_nNnDEQKFNq7ra5pmgotHq43Wy1jDOSPdc7Z6yjcPH7EFBaYDRZwdX5pN8lKCYQsUAyll4B-yZkrQBMx7xvRRfRXa-ebg8v8MsSVtfSbShm6BXHC8e3B9UMzdRpILxGPARnIWCZ4JnoALliYu9EQVrA-5uqGDyoQpG8BN09wxSqwpTpP4uPI3lNwndmpkYyRv64Yn5_pxYs"],"user-agent":["Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36"],"content-type":["multipart/form-data; boundary=----WebKitFormBoundary164A1qdlrKJkt7t8"],"origin":["http://localhost:4200"],"sec-gpc":["1"],"accept-language":["fr-FR,fr;q=0.9,en-US;q=0.8,en;q=0.7"],"referer":["http://localhost:4200/"],"sec-ch-ua":["\"Chromium\";v=\"122\", \"Not(A:Brand\";v=\"24\", \"Google Chrome\";v=\"122\""],"accept-encoding":["gzip, deflate, br, zstd"],"sec-ch-ua-platform":["\"Windows\""],"cache-control":["no-cache"],"connection":["keep-alive"],"accept":["application/json, text/plain, */*"],"dnt":["1"],"sec-fetch-site":["same-site"],"host":["localhost:8000"],"x-php-ob-level":["1"]} []
[2024-03-03T20:29:43.594748+00:00] app.INFO: Request Body: {"title":"gergergeg","content":"ergerger","receiver":"salim","sender_id":"8"} []
[2024-03-03T20:29:43.594808+00:00] app.INFO: Received Files: [] []
[2024-03-03T20:29:43.594981+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"salim"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"salim"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:29:43.596278+00:00] doctrine.DEBUG: Beginning transaction [] []
[2024-03-03T20:29:43.601184+00:00] doctrine.DEBUG: Executing statement: INSERT INTO message (title, photo_url, content, sender_id, receiver_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"gergergeg","2":null,"3":"ergerger","4":8,"5":7}, types: array{"1":0,"2":0,"3":0,"4":0,"5":0}) {"sql":"INSERT INTO message (title, photo_url, content, sender_id, receiver_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"gergergeg","2":null,"3":"ergerger","4":8,"5":7},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0},"3":{"Doctrine\\DBAL\\ParameterType":0},"4":{"Doctrine\\DBAL\\ParameterType":0},"5":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:29:43.607088+00:00] doctrine.DEBUG: Committing transaction [] []
[2024-03-03T20:29:43.610628+00:00] doctrine.DEBUG: Beginning transaction [] []
[2024-03-03T20:29:43.611438+00:00] doctrine.DEBUG: Executing statement: INSERT INTO notification (message, is_read, message_id, message_title, created_at, receiver_id) VALUES (?, ?, ?, ?, ?, ?) (parameters: array{"1":"user2 sent you a message","2":0,"3":50,"4":"gergergeg","5":"2024-03-03 20:29:43","6":7}, types: array{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0}) {"sql":"INSERT INTO notification (message, is_read, message_id, message_title, created_at, receiver_id) VALUES (?, ?, ?, ?, ?, ?)","params":{"1":"user2 sent you a message","2":0,"3":50,"4":"gergergeg","5":"2024-03-03 20:29:43","6":7},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0},"3":{"Doctrine\\DBAL\\ParameterType":0},"4":{"Doctrine\\DBAL\\ParameterType":0},"5":{"Doctrine\\DBAL\\ParameterType":0},"6":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:29:43.613814+00:00] doctrine.DEBUG: Committing transaction [] []
[2024-03-03T20:29:43.623670+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:29:43.628079+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:29:44.202170+00:00] request.INFO: Matched route "app_notifications_unread". {"route":"app_notifications_unread","route_parameters":{"_route":"app_notifications_unread","_controller":"App\\Controller\\NotificationController::getUnreadNotifications"},"request_uri":"http://localhost:8000/notifications","method":"GET"} []
[2024-03-03T20:29:44.230130+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:29:44.230284+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:29:44.363751+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:29:44.373167+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:29:44.395194+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:29:44.395355+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:29:44.395426+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:29:44.395489+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:29:44.398814+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:29:44.398991+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:29:44.402537+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:29:44.402705+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:29:44.402768+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:29:44.447263+00:00] doctrine.DEBUG: Executing statement: SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.created_at AS created_at_5, n0_.receiver_id AS receiver_id_6 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ? (parameters: array{"1":8,"2":0}, types: array{"1":0,"2":0}) {"sql":"SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.created_at AS created_at_5, n0_.receiver_id AS receiver_id_6 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ?","params":{"1":8,"2":0},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:29:44.452507+00:00] app.INFO: Unread Notifications: [{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]}] []
[2024-03-03T20:29:44.460175+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:29:44.468260+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:29:46.911188+00:00] request.INFO: Matched route "app_notifications_unread". {"route":"app_notifications_unread","route_parameters":{"_route":"app_notifications_unread","_controller":"App\\Controller\\NotificationController::getUnreadNotifications"},"request_uri":"http://localhost:8000/notifications","method":"GET"} []
[2024-03-03T20:29:46.977578+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:29:46.977814+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:29:46.992492+00:00] security.INFO: Authenticator failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\InvalidTokenException(code: 0): Invalid JWT Token at C:\\Users\\21696\\Documents\\SwiftWheels\\backend\\vendor\\lexik\\jwt-authentication-bundle\\Security\\Authenticator\\JWTAuthenticator.php:120)\n[previous exception] [object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\JWTDecodeFailureException(code: 0): Invalid JWT Token at C:\\Users\\21696\\Documents\\SwiftWheels\\backend\\vendor\\lexik\\jwt-authentication-bundle\\Encoder\\LcobucciJWTEncoder.php:52)\n[previous exception] [object] (Lcobucci\\JWT\\Token\\InvalidTokenStructure(code: 0): The JWT string must have two dots at C:\\Users\\21696\\Documents\\SwiftWheels\\backend\\vendor\\lcobucci\\jwt\\src\\Token\\InvalidTokenStructure.php:13)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:29:47.003012+00:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Authenticator\JWTAuthenticator" authenticator set the failure response. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:29:47.004092+00:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Authenticator\JWTAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:29:49.818301+00:00] request.INFO: Matched route "app_login". {"route":"app_login","route_parameters":{"_route":"app_login","_controller":"App\\Controller\\LoginController::login"},"request_uri":"http://localhost:8000/login","method":"POST"} []
[2024-03-03T20:29:49.838263+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:29:49.838377+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:29:49.838438+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:29:49.935772+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:29:49.958297+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"salim"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"salim"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:29:50.768414+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:29:51.407070+00:00] request.INFO: Matched route "app_notifications_unread". {"route":"app_notifications_unread","route_parameters":{"_route":"app_notifications_unread","_controller":"App\\Controller\\NotificationController::getUnreadNotifications"},"request_uri":"http://localhost:8000/notifications","method":"GET"} []
[2024-03-03T20:29:51.438803+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:29:51.438941+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:29:51.539671+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:29:51.572314+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"salim"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"salim"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:29:51.593845+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:29:51.593995+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:29:51.594083+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:29:51.594161+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:29:51.597407+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:29:51.597606+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"salim\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:29:51.600267+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:29:51.600391+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:29:51.600467+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:29:51.650441+00:00] doctrine.DEBUG: Executing statement: SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.created_at AS created_at_5, n0_.receiver_id AS receiver_id_6 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ? (parameters: array{"1":7,"2":0}, types: array{"1":0,"2":0}) {"sql":"SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.created_at AS created_at_5, n0_.receiver_id AS receiver_id_6 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ?","params":{"1":7,"2":0},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:29:51.654688+00:00] app.INFO: Unread Notifications: [{"App\\Entity\\Notification":[]}] []
[2024-03-03T20:29:51.660634+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:29:51.664049+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:30:02.641016+00:00] request.INFO: Matched route "app_notifications_mark_as_read". {"route":"app_notifications_mark_as_read","route_parameters":{"_route":"app_notifications_mark_as_read","_controller":"App\\Controller\\NotificationController::markNotificationsAsRead"},"request_uri":"http://localhost:8000/notifications/mark-as-read","method":"POST"} []
[2024-03-03T20:30:02.672699+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:30:02.672797+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:30:02.772142+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:30:02.798854+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"salim"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"salim"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:30:02.818535+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:30:02.818729+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:30:02.818810+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:30:02.818881+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:30:02.822101+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:30:02.822216+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"salim\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:30:02.824251+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:30:02.824351+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:30:02.824418+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:30:02.841193+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.message AS message_2, t0.is_read AS is_read_3, t0.message_id AS message_id_4, t0.message_title AS message_title_5, t0.created_at AS created_at_6, t0.receiver_id AS receiver_id_7 FROM notification t0 WHERE t0.id = ? (parameters: array{"1":25}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.message AS message_2, t0.is_read AS is_read_3, t0.message_id AS message_id_4, t0.message_title AS message_title_5, t0.created_at AS created_at_6, t0.receiver_id AS receiver_id_7 FROM notification t0 WHERE t0.id = ?","params":{"1":25},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:30:02.843903+00:00] doctrine.DEBUG: Beginning transaction [] []
[2024-03-03T20:30:02.844577+00:00] doctrine.DEBUG: Executing statement: UPDATE notification SET is_read = ? WHERE id = ? (parameters: array{"1":1,"2":25}, types: array{"1":0,"2":0}) {"sql":"UPDATE notification SET is_read = ? WHERE id = ?","params":{"1":1,"2":25},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:30:02.846548+00:00] doctrine.DEBUG: Committing transaction [] []
[2024-03-03T20:30:02.853242+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:30:02.858313+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:30:03.013564+00:00] request.INFO: Matched route "app_message_by_id". {"route":"app_message_by_id","route_parameters":{"_route":"app_message_by_id","_controller":"App\\Controller\\MessageController::getMessageById","id":"50"},"request_uri":"http://localhost:8000/messages/id/50","method":"GET"} []
[2024-03-03T20:30:03.049345+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:30:03.049465+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:30:03.163838+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:30:03.171973+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"salim"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"salim"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:30:03.195552+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:30:03.195673+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:30:03.195744+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:30:03.195808+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:30:03.200144+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:30:03.200288+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"salim\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:30:03.203068+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:30:03.203182+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:30:03.203257+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:30:03.216954+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.title AS title_2, t0.photo_url AS photo_url_3, t0.content AS content_4, t0.sender_id AS sender_id_5, t0.receiver_id AS receiver_id_6 FROM message t0 WHERE t0.id = ? (parameters: array{"1":50}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.title AS title_2, t0.photo_url AS photo_url_3, t0.content AS content_4, t0.sender_id AS sender_id_5, t0.receiver_id AS receiver_id_6 FROM message t0 WHERE t0.id = ?","params":{"1":50},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:30:03.228690+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? (parameters: array{"1":8}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ?","params":{"1":8},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:30:03.242267+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:30:03.250618+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:30:04.485550+00:00] request.INFO: Matched route "app_notifications_unread". {"route":"app_notifications_unread","route_parameters":{"_route":"app_notifications_unread","_controller":"App\\Controller\\NotificationController::getUnreadNotifications"},"request_uri":"http://localhost:8000/notifications","method":"GET"} []
[2024-03-03T20:30:04.531670+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:30:04.531802+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:30:04.675381+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:30:04.705211+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"salim"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"salim"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:30:04.727218+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:30:04.727365+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:30:04.727423+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:30:04.727475+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:30:04.732851+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:30:04.732977+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"salim\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:30:04.735557+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:30:04.735665+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:30:04.735729+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:30:04.792582+00:00] doctrine.DEBUG: Executing statement: SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.created_at AS created_at_5, n0_.receiver_id AS receiver_id_6 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ? (parameters: array{"1":7,"2":0}, types: array{"1":0,"2":0}) {"sql":"SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.created_at AS created_at_5, n0_.receiver_id AS receiver_id_6 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ?","params":{"1":7,"2":0},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:30:04.798221+00:00] app.INFO: Unread Notifications: [] []
[2024-03-03T20:30:04.803756+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:30:04.808086+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:30:30.384905+00:00] request.INFO: Matched route "app_notifications_unread". {"route":"app_notifications_unread","route_parameters":{"_route":"app_notifications_unread","_controller":"App\\Controller\\NotificationController::getUnreadNotifications"},"request_uri":"http://localhost:8000/notifications","method":"GET"} []
[2024-03-03T20:30:30.469417+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:30:30.470313+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:30:30.759618+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:30:30.768290+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"salim"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"salim"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:30:30.793685+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:30:30.793834+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:30:30.793910+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:30:30.793992+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:30:30.801062+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:30:30.801281+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"salim\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:30:30.806752+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:30:30.806920+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:30:30.807014+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:30:30.917186+00:00] doctrine.DEBUG: Executing statement: SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.created_at AS created_at_5, n0_.receiver_id AS receiver_id_6 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ? (parameters: array{"1":7,"2":0}, types: array{"1":0,"2":0}) {"sql":"SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.created_at AS created_at_5, n0_.receiver_id AS receiver_id_6 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ?","params":{"1":7,"2":0},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:30:30.922545+00:00] app.INFO: Unread Notifications: [] []
[2024-03-03T20:30:30.931831+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:30:30.937490+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:53:10.925621+00:00] request.INFO: Matched route "app_notifications_unread". {"route":"app_notifications_unread","route_parameters":{"_route":"app_notifications_unread","_controller":"App\\Controller\\NotificationController::getUnreadNotifications"},"request_uri":"http://localhost:8000/notifications","method":"GET"} []
[2024-03-03T20:53:11.017983+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:53:11.018119+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:53:11.233982+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:53:11.244115+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"salim"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"salim"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:53:11.267012+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:53:11.267117+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:53:11.267170+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:53:11.267218+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:53:11.272451+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:53:11.272587+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"salim\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:53:11.276912+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:53:11.277004+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:53:11.277053+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:53:11.338425+00:00] doctrine.DEBUG: Executing statement: SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.created_at AS created_at_5, n0_.receiver_id AS receiver_id_6 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ? (parameters: array{"1":7,"2":0}, types: array{"1":0,"2":0}) {"sql":"SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.created_at AS created_at_5, n0_.receiver_id AS receiver_id_6 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ?","params":{"1":7,"2":0},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:53:11.342147+00:00] app.INFO: Unread Notifications: [] []
[2024-03-03T20:53:11.349349+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:53:11.353151+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:53:13.027905+00:00] request.INFO: Matched route "app_user". {"route":"app_user","route_parameters":{"_route":"app_user","_controller":"App\\Controller\\UserController::listUsers"},"request_uri":"http://localhost:8000/users","method":"GET"} []
[2024-03-03T20:53:13.080709+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:53:13.080873+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:53:13.276379+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:53:13.300731+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"salim"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"salim"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:53:13.327743+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:53:13.327932+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:53:13.328038+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:53:13.328134+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:53:13.332675+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:53:13.332869+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"salim\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:53:13.335567+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:53:13.335692+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:53:13.335780+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:53:13.358182+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0"} []
[2024-03-03T20:53:13.370331+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:53:13.377905+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:53:15.607899+00:00] request.INFO: Matched route "app_messages". {"route":"app_messages","route_parameters":{"_route":"app_messages","_controller":"App\\Controller\\MessageController::sendMessage"},"request_uri":"http://localhost:8000/messages","method":"POST"} []
[2024-03-03T20:53:15.633806+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:53:15.633935+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:53:15.713141+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:53:15.724017+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"salim"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"salim"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:53:15.752554+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:53:15.752814+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:53:15.752950+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:53:15.753072+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:53:15.757860+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:53:15.758060+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"salim\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:53:15.761448+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:53:15.761656+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:53:15.761773+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:53:15.781879+00:00] app.INFO: Request Headers: {"origin":["http://localhost:4200"],"sec-gpc":["1"],"dnt":["1"],"sec-fetch-site":["same-site"],"sec-ch-ua-platform":["\"Windows\""],"content-type":["multipart/form-data; boundary=----WebKitFormBoundarycw4D7hCmCVPAvWkq"],"connection":["keep-alive"],"accept-encoding":["gzip, deflate, br, zstd"],"content-length":["442"],"sec-ch-ua-mobile":["?0"],"user-agent":["Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36"],"accept-language":["fr-FR,fr;q=0.9,en-US;q=0.8,en;q=0.7"],"sec-fetch-dest":["empty"],"host":["localhost:8000"],"authorization":["Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3MDk0OTc3OTAsImV4cCI6MTcwOTUwMTM5MCwicm9sZXMiOltdLCJ1c2VybmFtZSI6InNhbGltIn0.cpE7Nhte5DqB6kRMOAj0P9ej6BvedPwlapJLZ5rfy7tHvV1COnL7xxmoxoj6IUwKilfXtF50yTlTuJ-umPZd0Su0mAJmK1KYkIBnMV3uKg-FEpcRmnr2kv-TzDgNjqNb2CTg-GF8WtB65XCEmXC19rMqbrSboTbxl819cwTeo-rIhJbMibCye5N1JAdBL2PyAOQbyKVopT8-T0PC1Ixu5_byuHsFonVE-yXRkSDnVLqHtZlX5DkM6zvM-nFghJat72XhpOYnlgnc1wd1XW5MZIeuG9StBn-a1I5ERwzPXR1O_HRhEV97JPTJet9BsKm2NSU4ctkcFYW0tLe9wM9TRRQYqIJgD8y2gVyUffz9ww-rSOqVHYfxLvrNwVvWJFq2lLwYsWL_9UmrE3x6lh_0nWQDljtXAAQ8yJ7WyVcFOzo3-ycOhjFqKLzrHSFylu32VWni8RWN9uqcvc59wbNdWgHafdZh3s4hA3MmdsJvAbSjiNbtAii2Z37f95nVRY2d9JGhHIBA0qrk4tvXgrxyXo1exGhkEx7ie0pS7x7OyiBlyhWS7A8BgtnAbNSwbKV-gTs3yPxvRgn9bDmczNK-flVcXfiNmFWXn3U7ts6RPzoFzv5h05XgGC7-PmvfR2ROEJxkVohlvM7JaxPXw682UYvZZN3jf7Iqjk-BmeEL-Pw"],"referer":["http://localhost:4200/"],"accept":["application/json, text/plain, */*"],"mod-rewrite":["On"],"sec-fetch-mode":["cors"],"sec-ch-ua":["\"Chromium\";v=\"122\", \"Not(A:Brand\";v=\"24\", \"Google Chrome\";v=\"122\""],"x-php-ob-level":["1"]} []
[2024-03-03T20:53:15.782314+00:00] app.INFO: Request Body: {"title":"gergerg","content":"ergegege","receiver":"user2","sender_id":"7"} []
[2024-03-03T20:53:15.782409+00:00] app.INFO: Received Files: [] []
[2024-03-03T20:53:15.782697+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:53:15.784491+00:00] doctrine.DEBUG: Beginning transaction [] []
[2024-03-03T20:53:15.788887+00:00] doctrine.DEBUG: Executing statement: INSERT INTO message (title, photo_url, content, sender_id, receiver_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"gergerg","2":null,"3":"ergegege","4":7,"5":8}, types: array{"1":0,"2":0,"3":0,"4":0,"5":0}) {"sql":"INSERT INTO message (title, photo_url, content, sender_id, receiver_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"gergerg","2":null,"3":"ergegege","4":7,"5":8},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0},"3":{"Doctrine\\DBAL\\ParameterType":0},"4":{"Doctrine\\DBAL\\ParameterType":0},"5":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:53:15.793187+00:00] doctrine.DEBUG: Committing transaction [] []
[2024-03-03T20:53:15.796010+00:00] doctrine.DEBUG: Beginning transaction [] []
[2024-03-03T20:53:15.796592+00:00] doctrine.DEBUG: Executing statement: INSERT INTO notification (message, is_read, message_id, message_title, created_at, receiver_id) VALUES (?, ?, ?, ?, ?, ?) (parameters: array{"1":"salim sent you a message","2":0,"3":51,"4":"gergerg","5":"2024-03-03 20:53:15","6":8}, types: array{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0}) {"sql":"INSERT INTO notification (message, is_read, message_id, message_title, created_at, receiver_id) VALUES (?, ?, ?, ?, ?, ?)","params":{"1":"salim sent you a message","2":0,"3":51,"4":"gergerg","5":"2024-03-03 20:53:15","6":8},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0},"3":{"Doctrine\\DBAL\\ParameterType":0},"4":{"Doctrine\\DBAL\\ParameterType":0},"5":{"Doctrine\\DBAL\\ParameterType":0},"6":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:53:15.798057+00:00] doctrine.DEBUG: Committing transaction [] []
[2024-03-03T20:53:15.807524+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:53:15.812239+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:53:16.155245+00:00] request.INFO: Matched route "app_notifications_unread". {"route":"app_notifications_unread","route_parameters":{"_route":"app_notifications_unread","_controller":"App\\Controller\\NotificationController::getUnreadNotifications"},"request_uri":"http://localhost:8000/notifications","method":"GET"} []
[2024-03-03T20:53:16.190876+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:53:16.191023+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:53:16.308972+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:53:16.337107+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"salim"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"salim"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:53:16.367323+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:53:16.367727+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:53:16.367872+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:53:16.368083+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:53:16.374925+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:53:16.375173+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"salim\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:53:16.379953+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:53:16.380168+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:53:16.380308+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:53:16.442921+00:00] doctrine.DEBUG: Executing statement: SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.created_at AS created_at_5, n0_.receiver_id AS receiver_id_6 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ? (parameters: array{"1":7,"2":0}, types: array{"1":0,"2":0}) {"sql":"SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.created_at AS created_at_5, n0_.receiver_id AS receiver_id_6 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ?","params":{"1":7,"2":0},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:53:16.446359+00:00] app.INFO: Unread Notifications: [] []
[2024-03-03T20:53:16.457621+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:53:16.462426+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:53:17.474762+00:00] request.INFO: Matched route "app_user". {"route":"app_user","route_parameters":{"_route":"app_user","_controller":"App\\Controller\\UserController::listUsers"},"request_uri":"http://localhost:8000/users","method":"GET"} []
[2024-03-03T20:53:17.508804+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:53:17.508917+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:53:17.619210+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:53:17.647129+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"salim"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"salim"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:53:17.680322+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:53:17.680571+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:53:17.680753+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:53:17.680927+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:53:17.685581+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:53:17.685731+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"salim\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:53:17.687571+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:53:17.687671+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:53:17.687719+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:53:17.696217+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0"} []
[2024-03-03T20:53:17.702509+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:53:17.705250+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:53:19.795871+00:00] request.INFO: Matched route "app_messages". {"route":"app_messages","route_parameters":{"_route":"app_messages","_controller":"App\\Controller\\MessageController::sendMessage"},"request_uri":"http://localhost:8000/messages","method":"POST"} []
[2024-03-03T20:53:19.842428+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:53:19.842558+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:53:19.958957+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:53:19.966033+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"salim"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"salim"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:53:19.984628+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:53:19.984810+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:53:19.984872+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:53:19.984923+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:53:19.987273+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:53:19.987369+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"salim\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:53:19.989574+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:53:19.989655+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:53:19.989702+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:53:19.998606+00:00] app.INFO: Request Headers: {"sec-ch-ua-mobile":["?0"],"content-length":["439"],"authorization":["Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3MDk0OTc3OTAsImV4cCI6MTcwOTUwMTM5MCwicm9sZXMiOltdLCJ1c2VybmFtZSI6InNhbGltIn0.cpE7Nhte5DqB6kRMOAj0P9ej6BvedPwlapJLZ5rfy7tHvV1COnL7xxmoxoj6IUwKilfXtF50yTlTuJ-umPZd0Su0mAJmK1KYkIBnMV3uKg-FEpcRmnr2kv-TzDgNjqNb2CTg-GF8WtB65XCEmXC19rMqbrSboTbxl819cwTeo-rIhJbMibCye5N1JAdBL2PyAOQbyKVopT8-T0PC1Ixu5_byuHsFonVE-yXRkSDnVLqHtZlX5DkM6zvM-nFghJat72XhpOYnlgnc1wd1XW5MZIeuG9StBn-a1I5ERwzPXR1O_HRhEV97JPTJet9BsKm2NSU4ctkcFYW0tLe9wM9TRRQYqIJgD8y2gVyUffz9ww-rSOqVHYfxLvrNwVvWJFq2lLwYsWL_9UmrE3x6lh_0nWQDljtXAAQ8yJ7WyVcFOzo3-ycOhjFqKLzrHSFylu32VWni8RWN9uqcvc59wbNdWgHafdZh3s4hA3MmdsJvAbSjiNbtAii2Z37f95nVRY2d9JGhHIBA0qrk4tvXgrxyXo1exGhkEx7ie0pS7x7OyiBlyhWS7A8BgtnAbNSwbKV-gTs3yPxvRgn9bDmczNK-flVcXfiNmFWXn3U7ts6RPzoFzv5h05XgGC7-PmvfR2ROEJxkVohlvM7JaxPXw682UYvZZN3jf7Iqjk-BmeEL-Pw"],"connection":["keep-alive"],"sec-fetch-site":["same-site"],"user-agent":["Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36"],"accept":["application/json, text/plain, */*"],"sec-gpc":["1"],"content-type":["multipart/form-data; boundary=----WebKitFormBoundaryH9duNi2YenfIjQej"],"mod-rewrite":["On"],"referer":["http://localhost:4200/"],"sec-ch-ua":["\"Chromium\";v=\"122\", \"Not(A:Brand\";v=\"24\", \"Google Chrome\";v=\"122\""],"host":["localhost:8000"],"sec-ch-ua-platform":["\"Windows\""],"dnt":["1"],"accept-language":["fr-FR,fr;q=0.9,en-US;q=0.8,en;q=0.7"],"origin":["http://localhost:4200"],"accept-encoding":["gzip, deflate, br, zstd"],"sec-fetch-dest":["empty"],"sec-fetch-mode":["cors"],"x-php-ob-level":["1"]} []
[2024-03-03T20:53:19.998788+00:00] app.INFO: Request Body: {"title":"gergeg","content":"egerge","receiver":"user2","sender_id":"7"} []
[2024-03-03T20:53:19.998852+00:00] app.INFO: Received Files: [] []
[2024-03-03T20:53:19.999002+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:53:19.999944+00:00] doctrine.DEBUG: Beginning transaction [] []
[2024-03-03T20:53:20.002048+00:00] doctrine.DEBUG: Executing statement: INSERT INTO message (title, photo_url, content, sender_id, receiver_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"gergeg","2":null,"3":"egerge","4":7,"5":8}, types: array{"1":0,"2":0,"3":0,"4":0,"5":0}) {"sql":"INSERT INTO message (title, photo_url, content, sender_id, receiver_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"gergeg","2":null,"3":"egerge","4":7,"5":8},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0},"3":{"Doctrine\\DBAL\\ParameterType":0},"4":{"Doctrine\\DBAL\\ParameterType":0},"5":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:53:20.004095+00:00] doctrine.DEBUG: Committing transaction [] []
[2024-03-03T20:53:20.005992+00:00] doctrine.DEBUG: Beginning transaction [] []
[2024-03-03T20:53:20.006417+00:00] doctrine.DEBUG: Executing statement: INSERT INTO notification (message, is_read, message_id, message_title, created_at, receiver_id) VALUES (?, ?, ?, ?, ?, ?) (parameters: array{"1":"salim sent you a message","2":0,"3":52,"4":"gergeg","5":"2024-03-03 20:53:20","6":8}, types: array{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0}) {"sql":"INSERT INTO notification (message, is_read, message_id, message_title, created_at, receiver_id) VALUES (?, ?, ?, ?, ?, ?)","params":{"1":"salim sent you a message","2":0,"3":52,"4":"gergeg","5":"2024-03-03 20:53:20","6":8},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0},"3":{"Doctrine\\DBAL\\ParameterType":0},"4":{"Doctrine\\DBAL\\ParameterType":0},"5":{"Doctrine\\DBAL\\ParameterType":0},"6":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:53:20.007722+00:00] doctrine.DEBUG: Committing transaction [] []
[2024-03-03T20:53:20.013369+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:53:20.019862+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:53:20.332825+00:00] request.INFO: Matched route "app_notifications_unread". {"route":"app_notifications_unread","route_parameters":{"_route":"app_notifications_unread","_controller":"App\\Controller\\NotificationController::getUnreadNotifications"},"request_uri":"http://localhost:8000/notifications","method":"GET"} []
[2024-03-03T20:53:20.364425+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:53:20.364695+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:53:20.511762+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:53:20.535319+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"salim"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"salim"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:53:20.555750+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:53:20.555884+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:53:20.555957+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:53:20.556023+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:53:20.558875+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:53:20.559041+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"salim\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:53:20.561457+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:53:20.561641+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:53:20.561728+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:53:20.623065+00:00] doctrine.DEBUG: Executing statement: SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.created_at AS created_at_5, n0_.receiver_id AS receiver_id_6 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ? (parameters: array{"1":7,"2":0}, types: array{"1":0,"2":0}) {"sql":"SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.created_at AS created_at_5, n0_.receiver_id AS receiver_id_6 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ?","params":{"1":7,"2":0},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:53:20.628425+00:00] app.INFO: Unread Notifications: [] []
[2024-03-03T20:53:20.639829+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:53:20.645648+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:53:21.927619+00:00] request.INFO: Matched route "app_notifications_unread". {"route":"app_notifications_unread","route_parameters":{"_route":"app_notifications_unread","_controller":"App\\Controller\\NotificationController::getUnreadNotifications"},"request_uri":"http://localhost:8000/notifications","method":"GET"} []
[2024-03-03T20:53:21.971218+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:53:21.971355+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:53:22.103974+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:53:22.109523+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"salim"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"salim"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:53:22.135443+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:53:22.135609+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:53:22.135685+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:53:22.135870+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:53:22.141346+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:53:22.141539+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"salim\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:53:22.145002+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:53:22.145209+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:53:22.145298+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:53:22.231201+00:00] doctrine.DEBUG: Executing statement: SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.created_at AS created_at_5, n0_.receiver_id AS receiver_id_6 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ? (parameters: array{"1":7,"2":0}, types: array{"1":0,"2":0}) {"sql":"SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.created_at AS created_at_5, n0_.receiver_id AS receiver_id_6 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ?","params":{"1":7,"2":0},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:53:22.236263+00:00] app.INFO: Unread Notifications: [] []
[2024-03-03T20:53:22.243069+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:53:22.247170+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:53:22.614548+00:00] request.INFO: Matched route "app_notifications_unread". {"route":"app_notifications_unread","route_parameters":{"_route":"app_notifications_unread","_controller":"App\\Controller\\NotificationController::getUnreadNotifications"},"request_uri":"http://localhost:8000/notifications","method":"GET"} []
[2024-03-03T20:53:22.645354+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:53:22.645467+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:53:22.654667+00:00] security.INFO: Authenticator failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\InvalidTokenException(code: 0): Invalid JWT Token at C:\\Users\\21696\\Documents\\SwiftWheels\\backend\\vendor\\lexik\\jwt-authentication-bundle\\Security\\Authenticator\\JWTAuthenticator.php:120)\n[previous exception] [object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\JWTDecodeFailureException(code: 0): Invalid JWT Token at C:\\Users\\21696\\Documents\\SwiftWheels\\backend\\vendor\\lexik\\jwt-authentication-bundle\\Encoder\\LcobucciJWTEncoder.php:52)\n[previous exception] [object] (Lcobucci\\JWT\\Token\\InvalidTokenStructure(code: 0): The JWT string must have two dots at C:\\Users\\21696\\Documents\\SwiftWheels\\backend\\vendor\\lcobucci\\jwt\\src\\Token\\InvalidTokenStructure.php:13)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:53:22.664324+00:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Authenticator\JWTAuthenticator" authenticator set the failure response. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:53:22.665342+00:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Authenticator\JWTAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:53:26.925823+00:00] request.INFO: Matched route "app_login". {"route":"app_login","route_parameters":{"_route":"app_login","_controller":"App\\Controller\\LoginController::login"},"request_uri":"http://localhost:8000/login","method":"POST"} []
[2024-03-03T20:53:26.947486+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:53:26.947566+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:53:26.947617+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:53:27.044116+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:53:27.070137+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:53:27.665566+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:53:27.916765+00:00] request.INFO: Matched route "app_notifications_unread". {"route":"app_notifications_unread","route_parameters":{"_route":"app_notifications_unread","_controller":"App\\Controller\\NotificationController::getUnreadNotifications"},"request_uri":"http://localhost:8000/notifications","method":"GET"} []
[2024-03-03T20:53:27.945718+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:53:27.945870+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:53:28.045368+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:53:28.052931+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:53:28.075774+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:53:28.075923+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:53:28.076006+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:53:28.076082+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:53:28.079743+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:53:28.079867+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:53:28.082408+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:53:28.082593+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:53:28.082670+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:53:28.129838+00:00] doctrine.DEBUG: Executing statement: SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.created_at AS created_at_5, n0_.receiver_id AS receiver_id_6 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ? (parameters: array{"1":8,"2":0}, types: array{"1":0,"2":0}) {"sql":"SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.created_at AS created_at_5, n0_.receiver_id AS receiver_id_6 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ?","params":{"1":8,"2":0},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:53:28.133245+00:00] app.INFO: Unread Notifications: [{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]}] []
[2024-03-03T20:53:28.140926+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:53:28.147334+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:53:34.169746+00:00] request.INFO: Matched route "app_notifications_mark_as_read". {"route":"app_notifications_mark_as_read","route_parameters":{"_route":"app_notifications_mark_as_read","_controller":"App\\Controller\\NotificationController::markNotificationsAsRead"},"request_uri":"http://localhost:8000/notifications/mark-as-read","method":"POST"} []
[2024-03-03T20:53:34.194842+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:53:34.194937+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:53:34.288129+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:53:34.293743+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:53:34.307184+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:53:34.307296+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:53:34.307347+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:53:34.307403+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:53:34.309692+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:53:34.309779+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:53:34.311171+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:53:34.311241+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:53:34.311289+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:53:34.327209+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.message AS message_2, t0.is_read AS is_read_3, t0.message_id AS message_id_4, t0.message_title AS message_title_5, t0.created_at AS created_at_6, t0.receiver_id AS receiver_id_7 FROM notification t0 WHERE t0.id = ? (parameters: array{"1":27}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.message AS message_2, t0.is_read AS is_read_3, t0.message_id AS message_id_4, t0.message_title AS message_title_5, t0.created_at AS created_at_6, t0.receiver_id AS receiver_id_7 FROM notification t0 WHERE t0.id = ?","params":{"1":27},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:53:34.331070+00:00] doctrine.DEBUG: Beginning transaction [] []
[2024-03-03T20:53:34.331755+00:00] doctrine.DEBUG: Executing statement: UPDATE notification SET is_read = ? WHERE id = ? (parameters: array{"1":1,"2":27}, types: array{"1":0,"2":0}) {"sql":"UPDATE notification SET is_read = ? WHERE id = ?","params":{"1":1,"2":27},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:53:34.333022+00:00] doctrine.DEBUG: Committing transaction [] []
[2024-03-03T20:53:34.343181+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:53:34.347032+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:53:34.747797+00:00] request.INFO: Matched route "app_message_by_id". {"route":"app_message_by_id","route_parameters":{"_route":"app_message_by_id","_controller":"App\\Controller\\MessageController::getMessageById","id":"52"},"request_uri":"http://localhost:8000/messages/id/52","method":"GET"} []
[2024-03-03T20:53:34.793270+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:53:34.793454+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:53:34.975587+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:53:34.996839+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:53:35.030323+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:53:35.030621+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:53:35.030832+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:53:35.031024+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:53:35.038951+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:53:35.039158+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:53:35.043063+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:53:35.043252+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:53:35.043481+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:53:35.066565+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.title AS title_2, t0.photo_url AS photo_url_3, t0.content AS content_4, t0.sender_id AS sender_id_5, t0.receiver_id AS receiver_id_6 FROM message t0 WHERE t0.id = ? (parameters: array{"1":52}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.title AS title_2, t0.photo_url AS photo_url_3, t0.content AS content_4, t0.sender_id AS sender_id_5, t0.receiver_id AS receiver_id_6 FROM message t0 WHERE t0.id = ?","params":{"1":52},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:53:35.137417+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? (parameters: array{"1":7}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ?","params":{"1":7},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:53:35.150197+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:53:35.157733+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:53:36.048856+00:00] request.INFO: Matched route "app_notifications_unread". {"route":"app_notifications_unread","route_parameters":{"_route":"app_notifications_unread","_controller":"App\\Controller\\NotificationController::getUnreadNotifications"},"request_uri":"http://localhost:8000/notifications","method":"GET"} []
[2024-03-03T20:53:36.114354+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:53:36.114595+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:53:36.343413+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:53:36.355796+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:53:36.393175+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:53:36.393416+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:53:36.393563+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:53:36.393823+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:53:36.402783+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:53:36.402969+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:53:36.407857+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:53:36.408052+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:53:36.408161+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:53:36.482513+00:00] doctrine.DEBUG: Executing statement: SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.created_at AS created_at_5, n0_.receiver_id AS receiver_id_6 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ? (parameters: array{"1":8,"2":0}, types: array{"1":0,"2":0}) {"sql":"SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.created_at AS created_at_5, n0_.receiver_id AS receiver_id_6 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ?","params":{"1":8,"2":0},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:53:36.488305+00:00] app.INFO: Unread Notifications: [{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]}] []
[2024-03-03T20:53:36.500847+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:53:36.506568+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:57:57.072760+00:00] request.INFO: Matched route "app_notifications_unread". {"route":"app_notifications_unread","route_parameters":{"_route":"app_notifications_unread","_controller":"App\\Controller\\NotificationController::getUnreadNotifications"},"request_uri":"http://localhost:8000/notifications","method":"GET"} []
[2024-03-03T20:57:57.388438+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:57:57.388726+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:57:57.719828+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:57:57.739270+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:57:57.888819+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:57:57.889011+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:57:57.889119+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:57:57.889204+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:57:57.915624+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:57:57.915798+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:57:58.175380+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:57:58.175532+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:57:58.175679+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:57:58.236565+00:00] doctrine.DEBUG: Executing statement: SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.created_at AS created_at_5, n0_.receiver_id AS receiver_id_6 FROM notification n0_ WHERE n0_.receiver_id = ? ORDER BY n0_.created_at DESC LIMIT 10 (parameters: array{"1":8}, types: array{"1":0}) {"sql":"SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.created_at AS created_at_5, n0_.receiver_id AS receiver_id_6 FROM notification n0_ WHERE n0_.receiver_id = ? ORDER BY n0_.created_at DESC LIMIT 10","params":{"1":8},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:57:58.245667+00:00] app.INFO: Unread Notifications: [{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]}] []
[2024-03-03T20:57:58.249647+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:57:58.253488+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:57:59.456597+00:00] request.INFO: Matched route "app_notifications_unread". {"route":"app_notifications_unread","route_parameters":{"_route":"app_notifications_unread","_controller":"App\\Controller\\NotificationController::getUnreadNotifications"},"request_uri":"http://localhost:8000/notifications","method":"GET"} []
[2024-03-03T20:57:59.517275+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:57:59.517400+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:57:59.706226+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:57:59.730726+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:57:59.748087+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:57:59.748187+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:57:59.748250+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:57:59.748300+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:57:59.751378+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:57:59.751491+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:57:59.753906+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:57:59.754003+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:57:59.754051+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:57:59.790412+00:00] doctrine.DEBUG: Executing statement: SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.created_at AS created_at_5, n0_.receiver_id AS receiver_id_6 FROM notification n0_ WHERE n0_.receiver_id = ? ORDER BY n0_.created_at DESC LIMIT 10 (parameters: array{"1":8}, types: array{"1":0}) {"sql":"SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.created_at AS created_at_5, n0_.receiver_id AS receiver_id_6 FROM notification n0_ WHERE n0_.receiver_id = ? ORDER BY n0_.created_at DESC LIMIT 10","params":{"1":8},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:57:59.794860+00:00] app.INFO: Unread Notifications: [{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]}] []
[2024-03-03T20:57:59.799359+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:57:59.802600+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:58:06.718844+00:00] request.INFO: Matched route "app_notifications_mark_as_read". {"route":"app_notifications_mark_as_read","route_parameters":{"_route":"app_notifications_mark_as_read","_controller":"App\\Controller\\NotificationController::markNotificationsAsRead"},"request_uri":"http://localhost:8000/notifications/mark-as-read","method":"POST"} []
[2024-03-03T20:58:06.740211+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:58:06.740303+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:58:06.899911+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:58:06.906907+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:58:06.936423+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:58:06.936611+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:58:06.936708+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:58:06.936793+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:58:06.941575+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:58:06.941740+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:58:06.944375+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:58:06.944607+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:58:06.944701+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:58:06.974364+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.message AS message_2, t0.is_read AS is_read_3, t0.message_id AS message_id_4, t0.message_title AS message_title_5, t0.created_at AS created_at_6, t0.receiver_id AS receiver_id_7 FROM notification t0 WHERE t0.id = ? (parameters: array{"1":24}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.message AS message_2, t0.is_read AS is_read_3, t0.message_id AS message_id_4, t0.message_title AS message_title_5, t0.created_at AS created_at_6, t0.receiver_id AS receiver_id_7 FROM notification t0 WHERE t0.id = ?","params":{"1":24},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:58:06.977905+00:00] doctrine.DEBUG: Beginning transaction [] []
[2024-03-03T20:58:06.978639+00:00] doctrine.DEBUG: Executing statement: UPDATE notification SET is_read = ? WHERE id = ? (parameters: array{"1":1,"2":24}, types: array{"1":0,"2":0}) {"sql":"UPDATE notification SET is_read = ? WHERE id = ?","params":{"1":1,"2":24},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:58:06.979954+00:00] doctrine.DEBUG: Committing transaction [] []
[2024-03-03T20:58:06.991076+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:58:06.996514+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:58:07.431203+00:00] request.INFO: Matched route "app_message_by_id". {"route":"app_message_by_id","route_parameters":{"_route":"app_message_by_id","_controller":"App\\Controller\\MessageController::getMessageById","id":"49"},"request_uri":"http://localhost:8000/messages/id/49","method":"GET"} []
[2024-03-03T20:58:07.474803+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:58:07.474976+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:58:07.570557+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:58:07.592746+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:58:07.625577+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:58:07.626031+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:58:07.626197+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:58:07.626318+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:58:07.631155+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:58:07.631355+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:58:07.634922+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:58:07.635114+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:58:07.635218+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:58:07.659382+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.title AS title_2, t0.photo_url AS photo_url_3, t0.content AS content_4, t0.sender_id AS sender_id_5, t0.receiver_id AS receiver_id_6 FROM message t0 WHERE t0.id = ? (parameters: array{"1":49}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.title AS title_2, t0.photo_url AS photo_url_3, t0.content AS content_4, t0.sender_id AS sender_id_5, t0.receiver_id AS receiver_id_6 FROM message t0 WHERE t0.id = ?","params":{"1":49},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:58:07.675991+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? (parameters: array{"1":7}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ?","params":{"1":7},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:58:07.686501+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:58:07.692875+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:58:08.489997+00:00] request.INFO: Matched route "app_notifications_unread". {"route":"app_notifications_unread","route_parameters":{"_route":"app_notifications_unread","_controller":"App\\Controller\\NotificationController::getUnreadNotifications"},"request_uri":"http://localhost:8000/notifications","method":"GET"} []
[2024-03-03T20:58:08.539594+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:58:08.539686+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:58:08.673505+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:58:08.705738+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:58:08.728334+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:58:08.728676+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:58:08.728839+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:58:08.728933+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:58:08.734640+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:58:08.734762+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:58:08.737535+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:58:08.737675+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:58:08.737750+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:58:08.803945+00:00] doctrine.DEBUG: Executing statement: SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.created_at AS created_at_5, n0_.receiver_id AS receiver_id_6 FROM notification n0_ WHERE n0_.receiver_id = ? ORDER BY n0_.created_at DESC LIMIT 10 (parameters: array{"1":8}, types: array{"1":0}) {"sql":"SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.created_at AS created_at_5, n0_.receiver_id AS receiver_id_6 FROM notification n0_ WHERE n0_.receiver_id = ? ORDER BY n0_.created_at DESC LIMIT 10","params":{"1":8},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:58:08.809779+00:00] app.INFO: Unread Notifications: [{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]}] []
[2024-03-03T20:58:08.817681+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:58:08.821290+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:58:26.805902+00:00] request.INFO: Matched route "app_notifications_mark_as_read". {"route":"app_notifications_mark_as_read","route_parameters":{"_route":"app_notifications_mark_as_read","_controller":"App\\Controller\\NotificationController::markNotificationsAsRead"},"request_uri":"http://localhost:8000/notifications/mark-as-read","method":"POST"} []
[2024-03-03T20:58:26.830129+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:58:26.830211+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:58:26.944704+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:58:26.952060+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:58:26.972476+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:58:26.972652+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:58:26.972730+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:58:26.972798+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:58:26.975790+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:58:26.975953+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:58:26.978642+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:58:26.978786+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:58:26.978851+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:58:27.002643+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.message AS message_2, t0.is_read AS is_read_3, t0.message_id AS message_id_4, t0.message_title AS message_title_5, t0.created_at AS created_at_6, t0.receiver_id AS receiver_id_7 FROM notification t0 WHERE t0.id = ? (parameters: array{"1":24}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.message AS message_2, t0.is_read AS is_read_3, t0.message_id AS message_id_4, t0.message_title AS message_title_5, t0.created_at AS created_at_6, t0.receiver_id AS receiver_id_7 FROM notification t0 WHERE t0.id = ?","params":{"1":24},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:58:27.016370+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:58:27.026678+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:58:27.232379+00:00] request.INFO: Matched route "app_message_by_id". {"route":"app_message_by_id","route_parameters":{"_route":"app_message_by_id","_controller":"App\\Controller\\MessageController::getMessageById","id":"49"},"request_uri":"http://localhost:8000/messages/id/49","method":"GET"} []
[2024-03-03T20:58:27.272066+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:58:27.272363+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:58:27.398813+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:58:27.416816+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:58:27.432800+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:58:27.432960+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:58:27.433022+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:58:27.433078+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:58:27.436125+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:58:27.436223+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:58:27.438169+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:58:27.438255+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:58:27.438309+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:58:27.460221+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.title AS title_2, t0.photo_url AS photo_url_3, t0.content AS content_4, t0.sender_id AS sender_id_5, t0.receiver_id AS receiver_id_6 FROM message t0 WHERE t0.id = ? (parameters: array{"1":49}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.title AS title_2, t0.photo_url AS photo_url_3, t0.content AS content_4, t0.sender_id AS sender_id_5, t0.receiver_id AS receiver_id_6 FROM message t0 WHERE t0.id = ?","params":{"1":49},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:58:27.477757+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? (parameters: array{"1":7}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ?","params":{"1":7},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:58:27.483633+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:58:27.486566+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:58:28.420625+00:00] request.INFO: Matched route "app_notifications_unread". {"route":"app_notifications_unread","route_parameters":{"_route":"app_notifications_unread","_controller":"App\\Controller\\NotificationController::getUnreadNotifications"},"request_uri":"http://localhost:8000/notifications","method":"GET"} []
[2024-03-03T20:58:28.456472+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:58:28.456549+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:58:28.602579+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:58:28.633523+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:58:28.649734+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:58:28.649864+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:58:28.649937+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:58:28.649990+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:58:28.653431+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:58:28.653530+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:58:28.655708+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:58:28.655799+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:58:28.655846+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:58:28.710929+00:00] doctrine.DEBUG: Executing statement: SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.created_at AS created_at_5, n0_.receiver_id AS receiver_id_6 FROM notification n0_ WHERE n0_.receiver_id = ? ORDER BY n0_.created_at DESC LIMIT 10 (parameters: array{"1":8}, types: array{"1":0}) {"sql":"SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.created_at AS created_at_5, n0_.receiver_id AS receiver_id_6 FROM notification n0_ WHERE n0_.receiver_id = ? ORDER BY n0_.created_at DESC LIMIT 10","params":{"1":8},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:58:28.714063+00:00] app.INFO: Unread Notifications: [{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]}] []
[2024-03-03T20:58:28.720107+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:58:28.723330+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:58:30.396191+00:00] request.INFO: Matched route "app_notifications_mark_as_read". {"route":"app_notifications_mark_as_read","route_parameters":{"_route":"app_notifications_mark_as_read","_controller":"App\\Controller\\NotificationController::markNotificationsAsRead"},"request_uri":"http://localhost:8000/notifications/mark-as-read","method":"POST"} []
[2024-03-03T20:58:30.416951+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:58:30.417075+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:58:30.492725+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:58:30.510879+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:58:30.535361+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:58:30.535731+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:58:30.535882+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:58:30.535990+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:58:30.541240+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:58:30.541430+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:58:30.544844+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:58:30.545017+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:58:30.545134+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:58:30.571897+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.message AS message_2, t0.is_read AS is_read_3, t0.message_id AS message_id_4, t0.message_title AS message_title_5, t0.created_at AS created_at_6, t0.receiver_id AS receiver_id_7 FROM notification t0 WHERE t0.id = ? (parameters: array{"1":23}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.message AS message_2, t0.is_read AS is_read_3, t0.message_id AS message_id_4, t0.message_title AS message_title_5, t0.created_at AS created_at_6, t0.receiver_id AS receiver_id_7 FROM notification t0 WHERE t0.id = ?","params":{"1":23},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:58:30.573492+00:00] doctrine.DEBUG: Beginning transaction [] []
[2024-03-03T20:58:30.574072+00:00] doctrine.DEBUG: Executing statement: UPDATE notification SET is_read = ? WHERE id = ? (parameters: array{"1":1,"2":23}, types: array{"1":0,"2":0}) {"sql":"UPDATE notification SET is_read = ? WHERE id = ?","params":{"1":1,"2":23},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:58:30.575241+00:00] doctrine.DEBUG: Committing transaction [] []
[2024-03-03T20:58:30.586498+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:58:30.591816+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:58:30.903226+00:00] request.INFO: Matched route "app_message_by_id". {"route":"app_message_by_id","route_parameters":{"_route":"app_message_by_id","_controller":"App\\Controller\\MessageController::getMessageById","id":"48"},"request_uri":"http://localhost:8000/messages/id/48","method":"GET"} []
[2024-03-03T20:58:30.934721+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:58:30.934861+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:58:31.018383+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:58:31.047469+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:58:31.075932+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:58:31.076194+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:58:31.076407+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:58:31.076641+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:58:31.082760+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:58:31.082973+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:58:31.086657+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:58:31.086763+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:58:31.086817+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:58:31.110832+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.title AS title_2, t0.photo_url AS photo_url_3, t0.content AS content_4, t0.sender_id AS sender_id_5, t0.receiver_id AS receiver_id_6 FROM message t0 WHERE t0.id = ? (parameters: array{"1":48}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.title AS title_2, t0.photo_url AS photo_url_3, t0.content AS content_4, t0.sender_id AS sender_id_5, t0.receiver_id AS receiver_id_6 FROM message t0 WHERE t0.id = ?","params":{"1":48},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:58:31.125024+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? (parameters: array{"1":7}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ?","params":{"1":7},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:58:31.137919+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:58:31.144655+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:58:31.911003+00:00] request.INFO: Matched route "app_notifications_unread". {"route":"app_notifications_unread","route_parameters":{"_route":"app_notifications_unread","_controller":"App\\Controller\\NotificationController::getUnreadNotifications"},"request_uri":"http://localhost:8000/notifications","method":"GET"} []
[2024-03-03T20:58:31.960258+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:58:31.960371+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:58:32.118606+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:58:32.126547+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:58:32.143050+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:58:32.143202+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:58:32.143273+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:58:32.143339+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:58:32.147311+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:58:32.147437+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:58:32.150164+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:58:32.150350+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:58:32.150424+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:58:32.220053+00:00] doctrine.DEBUG: Executing statement: SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.created_at AS created_at_5, n0_.receiver_id AS receiver_id_6 FROM notification n0_ WHERE n0_.receiver_id = ? ORDER BY n0_.created_at DESC LIMIT 10 (parameters: array{"1":8}, types: array{"1":0}) {"sql":"SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.created_at AS created_at_5, n0_.receiver_id AS receiver_id_6 FROM notification n0_ WHERE n0_.receiver_id = ? ORDER BY n0_.created_at DESC LIMIT 10","params":{"1":8},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:58:32.224712+00:00] app.INFO: Unread Notifications: [{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]}] []
[2024-03-03T20:58:32.230269+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:58:32.235022+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:58:33.400666+00:00] request.INFO: Matched route "app_notifications_mark_as_read". {"route":"app_notifications_mark_as_read","route_parameters":{"_route":"app_notifications_mark_as_read","_controller":"App\\Controller\\NotificationController::markNotificationsAsRead"},"request_uri":"http://localhost:8000/notifications/mark-as-read","method":"POST"} []
[2024-03-03T20:58:33.429408+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:58:33.429496+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:58:33.510875+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:58:33.538635+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:58:33.567934+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:58:33.568135+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:58:33.568267+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:58:33.568388+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:58:33.573789+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:58:33.573978+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:58:33.577904+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:58:33.578064+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:58:33.579160+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:58:33.599290+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.message AS message_2, t0.is_read AS is_read_3, t0.message_id AS message_id_4, t0.message_title AS message_title_5, t0.created_at AS created_at_6, t0.receiver_id AS receiver_id_7 FROM notification t0 WHERE t0.id = ? (parameters: array{"1":21}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.message AS message_2, t0.is_read AS is_read_3, t0.message_id AS message_id_4, t0.message_title AS message_title_5, t0.created_at AS created_at_6, t0.receiver_id AS receiver_id_7 FROM notification t0 WHERE t0.id = ?","params":{"1":21},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:58:33.602207+00:00] doctrine.DEBUG: Beginning transaction [] []
[2024-03-03T20:58:33.603038+00:00] doctrine.DEBUG: Executing statement: UPDATE notification SET is_read = ? WHERE id = ? (parameters: array{"1":1,"2":21}, types: array{"1":0,"2":0}) {"sql":"UPDATE notification SET is_read = ? WHERE id = ?","params":{"1":1,"2":21},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:58:33.604041+00:00] doctrine.DEBUG: Committing transaction [] []
[2024-03-03T20:58:33.615739+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:58:33.622582+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:58:33.989356+00:00] request.INFO: Matched route "app_message_by_id". {"route":"app_message_by_id","route_parameters":{"_route":"app_message_by_id","_controller":"App\\Controller\\MessageController::getMessageById","id":"46"},"request_uri":"http://localhost:8000/messages/id/46","method":"GET"} []
[2024-03-03T20:58:34.033311+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:58:34.033393+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:58:34.113604+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:58:34.132071+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:58:34.159996+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:58:34.160188+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:58:34.160310+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:58:34.160421+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:58:34.165108+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:58:34.165271+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:58:34.168385+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:58:34.168540+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:58:34.168630+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:58:34.190815+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.title AS title_2, t0.photo_url AS photo_url_3, t0.content AS content_4, t0.sender_id AS sender_id_5, t0.receiver_id AS receiver_id_6 FROM message t0 WHERE t0.id = ? (parameters: array{"1":46}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.title AS title_2, t0.photo_url AS photo_url_3, t0.content AS content_4, t0.sender_id AS sender_id_5, t0.receiver_id AS receiver_id_6 FROM message t0 WHERE t0.id = ?","params":{"1":46},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:58:34.200203+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? (parameters: array{"1":7}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ?","params":{"1":7},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:58:34.213571+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:58:34.216977+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:58:34.777232+00:00] request.INFO: Matched route "app_notifications_unread". {"route":"app_notifications_unread","route_parameters":{"_route":"app_notifications_unread","_controller":"App\\Controller\\NotificationController::getUnreadNotifications"},"request_uri":"http://localhost:8000/notifications","method":"GET"} []
[2024-03-03T20:58:34.818167+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:58:34.818395+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:58:34.977844+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:58:35.037536+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:58:35.067700+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:58:35.067851+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:58:35.068006+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:58:35.068078+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:58:35.074746+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:58:35.074880+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:58:35.078382+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:58:35.078588+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:58:35.078667+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:58:35.156228+00:00] doctrine.DEBUG: Executing statement: SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.created_at AS created_at_5, n0_.receiver_id AS receiver_id_6 FROM notification n0_ WHERE n0_.receiver_id = ? ORDER BY n0_.created_at DESC LIMIT 10 (parameters: array{"1":8}, types: array{"1":0}) {"sql":"SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.created_at AS created_at_5, n0_.receiver_id AS receiver_id_6 FROM notification n0_ WHERE n0_.receiver_id = ? ORDER BY n0_.created_at DESC LIMIT 10","params":{"1":8},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:58:35.159497+00:00] app.INFO: Unread Notifications: [{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]}] []
[2024-03-03T20:58:35.168149+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:58:35.173803+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:58:36.894134+00:00] request.INFO: Matched route "app_notifications_mark_as_read". {"route":"app_notifications_mark_as_read","route_parameters":{"_route":"app_notifications_mark_as_read","_controller":"App\\Controller\\NotificationController::markNotificationsAsRead"},"request_uri":"http://localhost:8000/notifications/mark-as-read","method":"POST"} []
[2024-03-03T20:58:36.920739+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:58:36.920871+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:58:37.003104+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:58:37.019780+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:58:37.031163+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:58:37.031257+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:58:37.031305+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:58:37.031357+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:58:37.036366+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:58:37.036561+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:58:37.040407+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:58:37.040623+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:58:37.040759+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:58:37.070366+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.message AS message_2, t0.is_read AS is_read_3, t0.message_id AS message_id_4, t0.message_title AS message_title_5, t0.created_at AS created_at_6, t0.receiver_id AS receiver_id_7 FROM notification t0 WHERE t0.id = ? (parameters: array{"1":26}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.message AS message_2, t0.is_read AS is_read_3, t0.message_id AS message_id_4, t0.message_title AS message_title_5, t0.created_at AS created_at_6, t0.receiver_id AS receiver_id_7 FROM notification t0 WHERE t0.id = ?","params":{"1":26},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:58:37.074646+00:00] doctrine.DEBUG: Beginning transaction [] []
[2024-03-03T20:58:37.075133+00:00] doctrine.DEBUG: Executing statement: UPDATE notification SET is_read = ? WHERE id = ? (parameters: array{"1":1,"2":26}, types: array{"1":0,"2":0}) {"sql":"UPDATE notification SET is_read = ? WHERE id = ?","params":{"1":1,"2":26},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:58:37.076090+00:00] doctrine.DEBUG: Committing transaction [] []
[2024-03-03T20:58:37.080957+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:58:37.084124+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:58:37.423058+00:00] request.INFO: Matched route "app_message_by_id". {"route":"app_message_by_id","route_parameters":{"_route":"app_message_by_id","_controller":"App\\Controller\\MessageController::getMessageById","id":"51"},"request_uri":"http://localhost:8000/messages/id/51","method":"GET"} []
[2024-03-03T20:58:37.450599+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:58:37.450735+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:58:37.543458+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:58:37.567796+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:58:37.582503+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:58:37.582665+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:58:37.582724+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:58:37.582777+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:58:37.585507+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:58:37.585598+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:58:37.587622+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:58:37.587754+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:58:37.587910+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:58:37.601629+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.title AS title_2, t0.photo_url AS photo_url_3, t0.content AS content_4, t0.sender_id AS sender_id_5, t0.receiver_id AS receiver_id_6 FROM message t0 WHERE t0.id = ? (parameters: array{"1":51}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.title AS title_2, t0.photo_url AS photo_url_3, t0.content AS content_4, t0.sender_id AS sender_id_5, t0.receiver_id AS receiver_id_6 FROM message t0 WHERE t0.id = ?","params":{"1":51},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:58:37.612453+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? (parameters: array{"1":7}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ?","params":{"1":7},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:58:37.625036+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:58:37.631417+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:58:38.458226+00:00] request.INFO: Matched route "app_notifications_unread". {"route":"app_notifications_unread","route_parameters":{"_route":"app_notifications_unread","_controller":"App\\Controller\\NotificationController::getUnreadNotifications"},"request_uri":"http://localhost:8000/notifications","method":"GET"} []
[2024-03-03T20:58:38.490037+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:58:38.490126+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:58:38.634956+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:58:38.662779+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:58:38.692380+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:58:38.692597+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:58:38.692872+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:58:38.693007+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:58:38.701080+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:58:38.701299+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:58:38.706790+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:58:38.706984+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:58:38.707122+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:58:38.826452+00:00] doctrine.DEBUG: Executing statement: SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.created_at AS created_at_5, n0_.receiver_id AS receiver_id_6 FROM notification n0_ WHERE n0_.receiver_id = ? ORDER BY n0_.created_at DESC LIMIT 10 (parameters: array{"1":8}, types: array{"1":0}) {"sql":"SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.created_at AS created_at_5, n0_.receiver_id AS receiver_id_6 FROM notification n0_ WHERE n0_.receiver_id = ? ORDER BY n0_.created_at DESC LIMIT 10","params":{"1":8},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:58:38.833271+00:00] app.INFO: Unread Notifications: [{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]}] []
[2024-03-03T20:58:38.843649+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:58:38.850108+00:00] doctrine.INFO: Disconnecting [] []
