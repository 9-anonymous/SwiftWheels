[2024-03-03T20:01:15.169983+00:00] request.INFO: Matched route "app_notifications_mark_as_read". {"route":"app_notifications_mark_as_read","route_parameters":{"_route":"app_notifications_mark_as_read","_controller":"App\\Controller\\NotificationController::markNotificationsAsRead"},"request_uri":"http://localhost:8000/notifications/mark-as-read","method":"POST"} []
[2024-03-03T20:01:15.206829+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:01:15.206931+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:01:15.322661+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:01:15.329216+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:01:15.363440+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:01:15.363621+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:01:15.363719+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:01:15.363802+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:01:15.368728+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:01:15.368941+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:01:15.371766+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:01:15.371975+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:01:15.372058+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:01:15.388356+00:00] app.INFO: Received request: [] []
[2024-03-03T20:01:15.399366+00:00] request.CRITICAL: Uncaught PHP Exception Doctrine\ORM\Exception\MissingIdentifierField: "The identifier id is missing for a query of App\Entity\Notification" at MissingIdentifierField.php line 15 {"exception":"[object] (Doctrine\\ORM\\Exception\\MissingIdentifierField(code: 0): The identifier id is missing for a query of App\\Entity\\Notification at C:\\Users\\21696\\Documents\\SwiftWheels\\backend\\vendor\\doctrine\\orm\\src\\Exception\\MissingIdentifierField.php:15)"} []
[2024-03-03T20:01:15.469182+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:01:15.473103+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:01:15.629192+00:00] request.INFO: Matched route "app_message_by_id". {"route":"app_message_by_id","route_parameters":{"_route":"app_message_by_id","_controller":"App\\Controller\\MessageController::getMessageById","id":"43"},"request_uri":"http://localhost:8000/messages/id/43","method":"GET"} []
[2024-03-03T20:01:15.662357+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:01:15.662513+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:01:15.776392+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:01:15.782071+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:01:15.801687+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:01:15.801811+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:01:15.801894+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:01:15.801964+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:01:15.805591+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:01:15.805790+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:01:15.809072+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:01:15.809185+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:01:15.809249+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:01:15.826977+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.title AS title_2, t0.photo_url AS photo_url_3, t0.content AS content_4, t0.sender_id AS sender_id_5, t0.receiver_id AS receiver_id_6 FROM message t0 WHERE t0.id = ? (parameters: array{"1":43}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.title AS title_2, t0.photo_url AS photo_url_3, t0.content AS content_4, t0.sender_id AS sender_id_5, t0.receiver_id AS receiver_id_6 FROM message t0 WHERE t0.id = ?","params":{"1":43},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:01:15.842055+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? (parameters: array{"1":7}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ?","params":{"1":7},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:01:15.850767+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:01:15.857127+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:03:19.066053+00:00] request.INFO: Matched route "app_notifications_unread". {"route":"app_notifications_unread","route_parameters":{"_route":"app_notifications_unread","_controller":"App\\Controller\\NotificationController::getUnreadNotifications"},"request_uri":"http://localhost:8000/notifications","method":"GET"} []
[2024-03-03T20:03:19.321027+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:03:19.321137+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:03:19.519503+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:03:19.543159+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:03:19.562213+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:03:19.562313+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:03:19.562368+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:03:19.562418+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:03:19.566941+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:03:19.567118+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:03:19.573033+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:03:19.573178+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:03:19.573350+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:03:19.640561+00:00] doctrine.DEBUG: Executing statement: SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.receiver_id AS receiver_id_5 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ? (parameters: array{"1":8,"2":0}, types: array{"1":0,"2":0}) {"sql":"SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.receiver_id AS receiver_id_5 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ?","params":{"1":8,"2":0},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:03:19.645151+00:00] app.INFO: Unread Notifications: [{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]}] []
[2024-03-03T20:03:19.652198+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:03:19.656848+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:03:22.126109+00:00] request.INFO: Matched route "app_message_by_id". {"route":"app_message_by_id","route_parameters":{"_route":"app_message_by_id","_controller":"App\\Controller\\MessageController::getMessageById","id":"43"},"request_uri":"http://localhost:8000/messages/id/43","method":"GET"} []
[2024-03-03T20:03:22.359650+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:03:22.359820+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:03:22.558883+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:03:22.835996+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:03:23.661585+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:03:23.661757+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:03:23.661866+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:03:23.662051+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:03:23.666169+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:03:23.666358+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:03:23.668797+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:03:23.668939+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:03:23.669006+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:03:24.963742+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.title AS title_2, t0.photo_url AS photo_url_3, t0.content AS content_4, t0.sender_id AS sender_id_5, t0.receiver_id AS receiver_id_6 FROM message t0 WHERE t0.id = ? (parameters: array{"1":43}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.title AS title_2, t0.photo_url AS photo_url_3, t0.content AS content_4, t0.sender_id AS sender_id_5, t0.receiver_id AS receiver_id_6 FROM message t0 WHERE t0.id = ?","params":{"1":43},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:03:25.419389+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? (parameters: array{"1":7}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ?","params":{"1":7},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:03:25.435143+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:03:25.442075+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:03:25.681170+00:00] request.INFO: Matched route "app_notifications_mark_as_read". {"route":"app_notifications_mark_as_read","route_parameters":{"_route":"app_notifications_mark_as_read","_controller":"App\\Controller\\NotificationController::markNotificationsAsRead"},"request_uri":"http://localhost:8000/notifications/mark-as-read","method":"POST"} []
[2024-03-03T20:03:25.719510+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:03:25.719604+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:03:25.848575+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:03:25.854272+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:03:25.872591+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:03:25.872711+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:03:25.872772+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:03:25.872827+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:03:25.876006+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:03:25.876093+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:03:25.878218+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:03:25.878301+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:03:25.878421+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:03:25.898081+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.message AS message_2, t0.is_read AS is_read_3, t0.message_id AS message_id_4, t0.message_title AS message_title_5, t0.receiver_id AS receiver_id_6 FROM notification t0 WHERE t0.id = ? (parameters: array{"1":18}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.message AS message_2, t0.is_read AS is_read_3, t0.message_id AS message_id_4, t0.message_title AS message_title_5, t0.receiver_id AS receiver_id_6 FROM notification t0 WHERE t0.id = ?","params":{"1":18},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:03:25.900520+00:00] doctrine.DEBUG: Beginning transaction [] []
[2024-03-03T20:03:25.903633+00:00] doctrine.DEBUG: Executing statement: UPDATE notification SET is_read = ? WHERE id = ? (parameters: array{"1":1,"2":18}, types: array{"1":0,"2":0}) {"sql":"UPDATE notification SET is_read = ? WHERE id = ?","params":{"1":1,"2":18},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:03:25.910338+00:00] doctrine.DEBUG: Committing transaction [] []
[2024-03-03T20:03:25.920130+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:03:25.923994+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:03:36.667969+00:00] request.INFO: Matched route "app_notifications_unread". {"route":"app_notifications_unread","route_parameters":{"_route":"app_notifications_unread","_controller":"App\\Controller\\NotificationController::getUnreadNotifications"},"request_uri":"http://localhost:8000/notifications","method":"GET"} []
[2024-03-03T20:03:36.694879+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:03:36.694974+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:03:36.810696+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:03:36.816456+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:03:36.837746+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:03:36.837876+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:03:36.837969+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:03:36.838039+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:03:36.840954+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:03:36.841044+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:03:36.843466+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:03:36.843606+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:03:36.843687+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:03:36.887359+00:00] doctrine.DEBUG: Executing statement: SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.receiver_id AS receiver_id_5 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ? (parameters: array{"1":8,"2":0}, types: array{"1":0,"2":0}) {"sql":"SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.receiver_id AS receiver_id_5 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ?","params":{"1":8,"2":0},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:03:36.890855+00:00] app.INFO: Unread Notifications: [{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]}] []
[2024-03-03T20:03:36.896875+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:03:36.900081+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:03:46.668659+00:00] request.INFO: Matched route "app_messages_received". {"route":"app_messages_received","route_parameters":{"_route":"app_messages_received","_controller":"App\\Controller\\MessageController::getMessagesForUser","receiverUsername":"user2"},"request_uri":"http://localhost:8000/messages/user/user2","method":"GET"} []
[2024-03-03T20:03:46.692166+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:03:46.692300+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:03:46.809781+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:03:46.835874+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:03:46.851717+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:03:46.851906+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:03:46.851993+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:03:46.852057+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:03:46.854990+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:03:46.855104+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:03:46.857036+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:03:46.857238+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:03:46.857308+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:03:46.871168+00:00] app.INFO: Receiver Username: user2 [] []
[2024-03-03T20:03:46.871357+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:03:46.872841+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.title AS title_2, t0.photo_url AS photo_url_3, t0.content AS content_4, t0.sender_id AS sender_id_5, t0.receiver_id AS receiver_id_6 FROM message t0 WHERE t0.receiver_id = ? (parameters: array{"1":8}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.title AS title_2, t0.photo_url AS photo_url_3, t0.content AS content_4, t0.sender_id AS sender_id_5, t0.receiver_id AS receiver_id_6 FROM message t0 WHERE t0.receiver_id = ?","params":{"1":8},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:03:46.884907+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? (parameters: array{"1":7}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ?","params":{"1":7},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:03:46.893152+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:03:46.899270+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:03:50.530938+00:00] request.INFO: Matched route "app_notifications_unread". {"route":"app_notifications_unread","route_parameters":{"_route":"app_notifications_unread","_controller":"App\\Controller\\NotificationController::getUnreadNotifications"},"request_uri":"http://localhost:8000/notifications","method":"GET"} []
[2024-03-03T20:03:50.570414+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:03:50.570541+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:03:50.712437+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:03:50.740981+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:03:50.759749+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:03:50.759874+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:03:50.759931+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:03:50.759982+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:03:50.763666+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:03:50.763825+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:03:50.766566+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:03:50.766715+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:03:50.766774+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:03:50.813174+00:00] doctrine.DEBUG: Executing statement: SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.receiver_id AS receiver_id_5 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ? (parameters: array{"1":8,"2":0}, types: array{"1":0,"2":0}) {"sql":"SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.receiver_id AS receiver_id_5 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ?","params":{"1":8,"2":0},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:03:50.818872+00:00] app.INFO: Unread Notifications: [{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]}] []
[2024-03-03T20:03:50.828106+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:03:50.833583+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:26:05.638825+00:00] request.INFO: Matched route "app_notifications_unread". {"route":"app_notifications_unread","route_parameters":{"_route":"app_notifications_unread","_controller":"App\\Controller\\NotificationController::getUnreadNotifications"},"request_uri":"http://localhost:8000/notifications","method":"GET"} []
[2024-03-03T20:26:05.700823+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:26:05.700914+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:26:05.878006+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:26:05.907334+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:26:05.942057+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:26:05.942147+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:26:05.942195+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:26:05.942238+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:26:05.946614+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:26:05.946692+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:26:05.952629+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:26:05.952721+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:26:05.952776+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:26:06.016735+00:00] doctrine.DEBUG: Executing statement: SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.receiver_id AS receiver_id_5 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ? (parameters: array{"1":8,"2":0}, types: array{"1":0,"2":0}) {"sql":"SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.receiver_id AS receiver_id_5 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ?","params":{"1":8,"2":0},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:26:06.020403+00:00] app.INFO: Unread Notifications: [{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]}] []
[2024-03-03T20:26:06.024882+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:26:06.028358+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:29:28.246419+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:29:28.256801+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-03-03T20:29:28.259310+00:00] doctrine.DEBUG: Executing statement: SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,        c.COLUMN_TYPE       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION (parameters: array{"1":"sw","2":"sw"}, types: array{"1":0,"2":0}) {"sql":"SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,\r\n       c.COLUMN_TYPE       AS type,\r\n       c.IS_NULLABLE        AS `null`,\r\n       c.COLUMN_KEY         AS `key`,\r\n       c.COLUMN_DEFAULT     AS `default`,\r\n       c.EXTRA,\r\n       c.COLUMN_COMMENT     AS comment,\r\n       c.CHARACTER_SET_NAME AS characterset,\r\n       c.COLLATION_NAME     AS collation\r\nFROM information_schema.COLUMNS c\r\n    INNER JOIN information_schema.TABLES t\r\n        ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION","params":{"1":"sw","2":"sw"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:29:28.274105+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"sw"}, types: array{"1":0}) {"sql":"SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,\r\n        INDEX_NAME  AS Key_name,\r\n        COLUMN_NAME AS Column_Name,\r\n        SUB_PART    AS Sub_Part,\r\n        INDEX_TYPE  AS Index_Type\r\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX","params":{"1":"sw"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:29:28.277321+00:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION,             c.UPDATE_RULE,             c.DELETE_RULE FROM information_schema.key_column_usage k INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME WHERE k.TABLE_SCHEMA = ? AND c.CONSTRAINT_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"sw","2":"sw"}, types: array{"1":0,"2":0}) {"sql":"SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,\r\n            k.COLUMN_NAME,\r\n            k.REFERENCED_TABLE_NAME,\r\n            k.REFERENCED_COLUMN_NAME,\r\n            k.ORDINAL_POSITION,\r\n            c.UPDATE_RULE,\r\n            c.DELETE_RULE\r\nFROM information_schema.key_column_usage k\r\nINNER JOIN information_schema.referential_constraints c\r\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\r\nAND c.TABLE_NAME = k.TABLE_NAME WHERE k.TABLE_SCHEMA = ? AND c.CONSTRAINT_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL ORDER BY k.ORDINAL_POSITION","params":{"1":"sw","2":"sw"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:29:28.282282+00:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"sw"}, types: array{"1":0}) {"sql":"    SELECT t.TABLE_NAME,\r\n           t.ENGINE,\r\n           t.AUTO_INCREMENT,\r\n           t.TABLE_COMMENT,\r\n           t.CREATE_OPTIONS,\r\n           t.TABLE_COLLATION,\r\n           ccsa.CHARACTER_SET_NAME\r\n      FROM information_schema.TABLES t\r\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\r\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"sw"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:29:28.292087+00:00] doctrine.DEBUG: Executing query: SELECT @@character_set_database, @@collation_database {"sql":"SELECT @@character_set_database, @@collation_database"} []
[2024-03-03T20:29:28.293086+00:00] doctrine.DEBUG: Executing statement: SELECT DEFAULT_COLLATE_NAME FROM information_schema.CHARACTER_SETS WHERE CHARACTER_SET_NAME = ?; (parameters: array{"1":"utf8mb4"}, types: array{"1":0}) {"sql":"SELECT DEFAULT_COLLATE_NAME\r\nFROM information_schema.CHARACTER_SETS\r\nWHERE CHARACTER_SET_NAME = ?;","params":{"1":"utf8mb4"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:29:28.303548+00:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-03-03T20:29:28.304209+00:00] doctrine.DEBUG: Executing statement: SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,        c.COLUMN_TYPE       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION (parameters: array{"1":"sw","2":"sw"}, types: array{"1":0,"2":0}) {"sql":"SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,\r\n       c.COLUMN_TYPE       AS type,\r\n       c.IS_NULLABLE        AS `null`,\r\n       c.COLUMN_KEY         AS `key`,\r\n       c.COLUMN_DEFAULT     AS `default`,\r\n       c.EXTRA,\r\n       c.COLUMN_COMMENT     AS comment,\r\n       c.CHARACTER_SET_NAME AS characterset,\r\n       c.COLLATION_NAME     AS collation\r\nFROM information_schema.COLUMNS c\r\n    INNER JOIN information_schema.TABLES t\r\n        ON t.TABLE_NAME = c.TABLE_NAME WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION","params":{"1":"sw","2":"sw"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:29:28.310379+00:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"sw"}, types: array{"1":0}) {"sql":"SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,\r\n        INDEX_NAME  AS Key_name,\r\n        COLUMN_NAME AS Column_Name,\r\n        SUB_PART    AS Sub_Part,\r\n        INDEX_TYPE  AS Index_Type\r\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX","params":{"1":"sw"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:29:28.312254+00:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION,             c.UPDATE_RULE,             c.DELETE_RULE FROM information_schema.key_column_usage k INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME WHERE k.TABLE_SCHEMA = ? AND c.CONSTRAINT_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"sw","2":"sw"}, types: array{"1":0,"2":0}) {"sql":"SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,\r\n            k.COLUMN_NAME,\r\n            k.REFERENCED_TABLE_NAME,\r\n            k.REFERENCED_COLUMN_NAME,\r\n            k.ORDINAL_POSITION,\r\n            c.UPDATE_RULE,\r\n            c.DELETE_RULE\r\nFROM information_schema.key_column_usage k\r\nINNER JOIN information_schema.referential_constraints c\r\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\r\nAND c.TABLE_NAME = k.TABLE_NAME WHERE k.TABLE_SCHEMA = ? AND c.CONSTRAINT_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL ORDER BY k.ORDINAL_POSITION","params":{"1":"sw","2":"sw"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:29:28.314908+00:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"sw"}, types: array{"1":0}) {"sql":"    SELECT t.TABLE_NAME,\r\n           t.ENGINE,\r\n           t.AUTO_INCREMENT,\r\n           t.TABLE_COMMENT,\r\n           t.CREATE_OPTIONS,\r\n           t.TABLE_COLLATION,\r\n           ccsa.CHARACTER_SET_NAME\r\n      FROM information_schema.TABLES t\r\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\r\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"sw"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:29:28.318149+00:00] doctrine.DEBUG: Executing statement: SELECT DEFAULT_COLLATE_NAME FROM information_schema.CHARACTER_SETS WHERE CHARACTER_SET_NAME = ?; (parameters: array{"1":"utf8mb4"}, types: array{"1":0}) {"sql":"SELECT DEFAULT_COLLATE_NAME\r\nFROM information_schema.CHARACTER_SETS\r\nWHERE CHARACTER_SET_NAME = ?;","params":{"1":"utf8mb4"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:29:28.319773+00:00] doctrine.DEBUG: Executing statement: ALTER TABLE message ADD CONSTRAINT FK_B6BD307FF624B39D FOREIGN KEY (sender_id) REFERENCES user (id) {"sql":"ALTER TABLE message ADD CONSTRAINT FK_B6BD307FF624B39D FOREIGN KEY (sender_id) REFERENCES user (id)"} []
[2024-03-03T20:29:28.383233+00:00] doctrine.DEBUG: Executing statement: ALTER TABLE message ADD CONSTRAINT FK_B6BD307FCD53EDB6 FOREIGN KEY (receiver_id) REFERENCES user (id) {"sql":"ALTER TABLE message ADD CONSTRAINT FK_B6BD307FCD53EDB6 FOREIGN KEY (receiver_id) REFERENCES user (id)"} []
[2024-03-03T20:29:28.440334+00:00] doctrine.DEBUG: Executing statement: ALTER TABLE notification ADD CONSTRAINT FK_BF5476CACD53EDB6 FOREIGN KEY (receiver_id) REFERENCES user (id) {"sql":"ALTER TABLE notification ADD CONSTRAINT FK_BF5476CACD53EDB6 FOREIGN KEY (receiver_id) REFERENCES user (id)"} []
[2024-03-03T20:29:28.497649+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:29:35.986165+00:00] request.INFO: Matched route "app_notifications_unread". {"route":"app_notifications_unread","route_parameters":{"_route":"app_notifications_unread","_controller":"App\\Controller\\NotificationController::getUnreadNotifications"},"request_uri":"http://localhost:8000/notifications","method":"GET"} []
[2024-03-03T20:29:36.055850+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:29:36.055958+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:29:36.236472+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:29:36.264482+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:29:36.298301+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:29:36.298545+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:29:36.298649+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:29:36.298725+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:29:36.304983+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:29:36.305084+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:29:36.309966+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:29:36.310072+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:29:36.310129+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:29:36.373278+00:00] doctrine.DEBUG: Executing statement: SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.created_at AS created_at_5, n0_.receiver_id AS receiver_id_6 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ? (parameters: array{"1":8,"2":0}, types: array{"1":0,"2":0}) {"sql":"SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.created_at AS created_at_5, n0_.receiver_id AS receiver_id_6 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ?","params":{"1":8,"2":0},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:29:36.377857+00:00] app.INFO: Unread Notifications: [{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]}] []
[2024-03-03T20:29:36.384951+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:29:36.389031+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:29:39.549364+00:00] request.INFO: Matched route "app_user". {"route":"app_user","route_parameters":{"_route":"app_user","_controller":"App\\Controller\\UserController::listUsers"},"request_uri":"http://localhost:8000/users","method":"GET"} []
[2024-03-03T20:29:39.581528+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:29:39.581615+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:29:39.712312+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:29:39.736317+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:29:39.752774+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:29:39.752886+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:29:39.752939+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:29:39.752990+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:29:39.755798+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:29:39.755898+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:29:39.757481+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:29:39.757586+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:29:39.757638+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:29:39.773300+00:00] doctrine.DEBUG: Executing query: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0"} []
[2024-03-03T20:29:39.779044+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:29:39.782430+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:29:43.405543+00:00] request.INFO: Matched route "app_messages". {"route":"app_messages","route_parameters":{"_route":"app_messages","_controller":"App\\Controller\\MessageController::sendMessage"},"request_uri":"http://localhost:8000/messages","method":"POST"} []
[2024-03-03T20:29:43.427443+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:29:43.427524+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:29:43.531014+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:29:43.559803+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:29:43.577547+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:29:43.577655+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:29:43.577711+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:29:43.577844+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:29:43.580062+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:29:43.580138+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:29:43.581781+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:29:43.581872+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:29:43.581924+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:29:43.594544+00:00] app.INFO: Request Headers: {"pragma":["no-cache"],"content-length":["444"],"sec-ch-ua-mobile":["?0"],"sec-fetch-dest":["empty"],"sec-fetch-mode":["cors"],"mod-rewrite":["On"],"authorization":["Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3MDk0OTcyNDYsImV4cCI6MTcwOTUwMDg0Niwicm9sZXMiOltdLCJ1c2VybmFtZSI6InVzZXIyIn0.CawKPz70ev1uCY97id8jC4-F82VoabHMBBtwM71nvyVQc3g0Z93GjkaVOzDoJD9yMibqLKH-vFUiw92ksZzuOzjufiUUMxN_xI8AoDHugvnyuqAza0gbvceVXNMKNwYWxVsU6uOkroy_OFFM2D7DwYHJXE5S-N4OCCHDFBc1PlhMUt4f9YhQjRaSUrufz5gc33K_QRRLYfIsUnKk-7SZdeAI5-tDYEFCdZJEmpWyhWpFl35RRntEiY_dHBGNu33Sm4vvPAF0k3TthsaLBNZg9aK3VHh6xvLBOX6f2a8HFdRip_RbjLyK7Kou_FzFUduUVMG85FPDMZr4LcWkMi2DJhn-bKCxeryD-MNEN0eeU0K9yTL3gHvlhAcv5QJnnx-qoTbhzP9M4INGs02vU7o3j8XoLpFSnieaPS6U7dfp92TaQthD9kmkf_cqNjIm55x6SUMHGxcvaJLx6zuJmy7vNJlkeKeoGvTW_nNnDEQKFNq7ra5pmgotHq43Wy1jDOSPdc7Z6yjcPH7EFBaYDRZwdX5pN8lKCYQsUAyll4B-yZkrQBMx7xvRRfRXa-ebg8v8MsSVtfSbShm6BXHC8e3B9UMzdRpILxGPARnIWCZ4JnoALliYu9EQVrA-5uqGDyoQpG8BN09wxSqwpTpP4uPI3lNwndmpkYyRv64Yn5_pxYs"],"user-agent":["Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36"],"content-type":["multipart/form-data; boundary=----WebKitFormBoundary164A1qdlrKJkt7t8"],"origin":["http://localhost:4200"],"sec-gpc":["1"],"accept-language":["fr-FR,fr;q=0.9,en-US;q=0.8,en;q=0.7"],"referer":["http://localhost:4200/"],"sec-ch-ua":["\"Chromium\";v=\"122\", \"Not(A:Brand\";v=\"24\", \"Google Chrome\";v=\"122\""],"accept-encoding":["gzip, deflate, br, zstd"],"sec-ch-ua-platform":["\"Windows\""],"cache-control":["no-cache"],"connection":["keep-alive"],"accept":["application/json, text/plain, */*"],"dnt":["1"],"sec-fetch-site":["same-site"],"host":["localhost:8000"],"x-php-ob-level":["1"]} []
[2024-03-03T20:29:43.594748+00:00] app.INFO: Request Body: {"title":"gergergeg","content":"ergerger","receiver":"salim","sender_id":"8"} []
[2024-03-03T20:29:43.594808+00:00] app.INFO: Received Files: [] []
[2024-03-03T20:29:43.594981+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"salim"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"salim"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:29:43.596278+00:00] doctrine.DEBUG: Beginning transaction [] []
[2024-03-03T20:29:43.601184+00:00] doctrine.DEBUG: Executing statement: INSERT INTO message (title, photo_url, content, sender_id, receiver_id) VALUES (?, ?, ?, ?, ?) (parameters: array{"1":"gergergeg","2":null,"3":"ergerger","4":8,"5":7}, types: array{"1":0,"2":0,"3":0,"4":0,"5":0}) {"sql":"INSERT INTO message (title, photo_url, content, sender_id, receiver_id) VALUES (?, ?, ?, ?, ?)","params":{"1":"gergergeg","2":null,"3":"ergerger","4":8,"5":7},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0},"3":{"Doctrine\\DBAL\\ParameterType":0},"4":{"Doctrine\\DBAL\\ParameterType":0},"5":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:29:43.607088+00:00] doctrine.DEBUG: Committing transaction [] []
[2024-03-03T20:29:43.610628+00:00] doctrine.DEBUG: Beginning transaction [] []
[2024-03-03T20:29:43.611438+00:00] doctrine.DEBUG: Executing statement: INSERT INTO notification (message, is_read, message_id, message_title, created_at, receiver_id) VALUES (?, ?, ?, ?, ?, ?) (parameters: array{"1":"user2 sent you a message","2":0,"3":50,"4":"gergergeg","5":"2024-03-03 20:29:43","6":7}, types: array{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0}) {"sql":"INSERT INTO notification (message, is_read, message_id, message_title, created_at, receiver_id) VALUES (?, ?, ?, ?, ?, ?)","params":{"1":"user2 sent you a message","2":0,"3":50,"4":"gergergeg","5":"2024-03-03 20:29:43","6":7},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0},"3":{"Doctrine\\DBAL\\ParameterType":0},"4":{"Doctrine\\DBAL\\ParameterType":0},"5":{"Doctrine\\DBAL\\ParameterType":0},"6":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:29:43.613814+00:00] doctrine.DEBUG: Committing transaction [] []
[2024-03-03T20:29:43.623670+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:29:43.628079+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:29:44.202170+00:00] request.INFO: Matched route "app_notifications_unread". {"route":"app_notifications_unread","route_parameters":{"_route":"app_notifications_unread","_controller":"App\\Controller\\NotificationController::getUnreadNotifications"},"request_uri":"http://localhost:8000/notifications","method":"GET"} []
[2024-03-03T20:29:44.230130+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:29:44.230284+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:29:44.363751+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:29:44.373167+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"user2"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"user2"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:29:44.395194+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:29:44.395355+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:29:44.395426+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:29:44.395489+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:29:44.398814+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:29:44.398991+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"user2\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:29:44.402537+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:29:44.402705+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:29:44.402768+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:29:44.447263+00:00] doctrine.DEBUG: Executing statement: SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.created_at AS created_at_5, n0_.receiver_id AS receiver_id_6 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ? (parameters: array{"1":8,"2":0}, types: array{"1":0,"2":0}) {"sql":"SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.created_at AS created_at_5, n0_.receiver_id AS receiver_id_6 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ?","params":{"1":8,"2":0},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:29:44.452507+00:00] app.INFO: Unread Notifications: [{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]},{"App\\Entity\\Notification":[]}] []
[2024-03-03T20:29:44.460175+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:29:44.468260+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:29:46.911188+00:00] request.INFO: Matched route "app_notifications_unread". {"route":"app_notifications_unread","route_parameters":{"_route":"app_notifications_unread","_controller":"App\\Controller\\NotificationController::getUnreadNotifications"},"request_uri":"http://localhost:8000/notifications","method":"GET"} []
[2024-03-03T20:29:46.977578+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:29:46.977814+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:29:46.992492+00:00] security.INFO: Authenticator failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\InvalidTokenException(code: 0): Invalid JWT Token at C:\\Users\\21696\\Documents\\SwiftWheels\\backend\\vendor\\lexik\\jwt-authentication-bundle\\Security\\Authenticator\\JWTAuthenticator.php:120)\n[previous exception] [object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\JWTDecodeFailureException(code: 0): Invalid JWT Token at C:\\Users\\21696\\Documents\\SwiftWheels\\backend\\vendor\\lexik\\jwt-authentication-bundle\\Encoder\\LcobucciJWTEncoder.php:52)\n[previous exception] [object] (Lcobucci\\JWT\\Token\\InvalidTokenStructure(code: 0): The JWT string must have two dots at C:\\Users\\21696\\Documents\\SwiftWheels\\backend\\vendor\\lcobucci\\jwt\\src\\Token\\InvalidTokenStructure.php:13)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:29:47.003012+00:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Authenticator\JWTAuthenticator" authenticator set the failure response. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:29:47.004092+00:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Authenticator\JWTAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:29:49.818301+00:00] request.INFO: Matched route "app_login". {"route":"app_login","route_parameters":{"_route":"app_login","_controller":"App\\Controller\\LoginController::login"},"request_uri":"http://localhost:8000/login","method":"POST"} []
[2024-03-03T20:29:49.838263+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:29:49.838377+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:29:49.838438+00:00] security.DEBUG: Authenticator does not support the request. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:29:49.935772+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:29:49.958297+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"salim"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"salim"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:29:50.768414+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:29:51.407070+00:00] request.INFO: Matched route "app_notifications_unread". {"route":"app_notifications_unread","route_parameters":{"_route":"app_notifications_unread","_controller":"App\\Controller\\NotificationController::getUnreadNotifications"},"request_uri":"http://localhost:8000/notifications","method":"GET"} []
[2024-03-03T20:29:51.438803+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:29:51.438941+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:29:51.539671+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:29:51.572314+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"salim"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"salim"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:29:51.593845+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:29:51.593995+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:29:51.594083+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:29:51.594161+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:29:51.597407+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:29:51.597606+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"salim\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:29:51.600267+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:29:51.600391+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:29:51.600467+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:29:51.650441+00:00] doctrine.DEBUG: Executing statement: SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.created_at AS created_at_5, n0_.receiver_id AS receiver_id_6 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ? (parameters: array{"1":7,"2":0}, types: array{"1":0,"2":0}) {"sql":"SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.created_at AS created_at_5, n0_.receiver_id AS receiver_id_6 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ?","params":{"1":7,"2":0},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:29:51.654688+00:00] app.INFO: Unread Notifications: [{"App\\Entity\\Notification":[]}] []
[2024-03-03T20:29:51.660634+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:29:51.664049+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:30:02.641016+00:00] request.INFO: Matched route "app_notifications_mark_as_read". {"route":"app_notifications_mark_as_read","route_parameters":{"_route":"app_notifications_mark_as_read","_controller":"App\\Controller\\NotificationController::markNotificationsAsRead"},"request_uri":"http://localhost:8000/notifications/mark-as-read","method":"POST"} []
[2024-03-03T20:30:02.672699+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:30:02.672797+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:30:02.772142+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:30:02.798854+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"salim"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"salim"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:30:02.818535+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:30:02.818729+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:30:02.818810+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:30:02.818881+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:30:02.822101+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:30:02.822216+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"salim\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:30:02.824251+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:30:02.824351+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:30:02.824418+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:30:02.841193+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.message AS message_2, t0.is_read AS is_read_3, t0.message_id AS message_id_4, t0.message_title AS message_title_5, t0.created_at AS created_at_6, t0.receiver_id AS receiver_id_7 FROM notification t0 WHERE t0.id = ? (parameters: array{"1":25}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.message AS message_2, t0.is_read AS is_read_3, t0.message_id AS message_id_4, t0.message_title AS message_title_5, t0.created_at AS created_at_6, t0.receiver_id AS receiver_id_7 FROM notification t0 WHERE t0.id = ?","params":{"1":25},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:30:02.843903+00:00] doctrine.DEBUG: Beginning transaction [] []
[2024-03-03T20:30:02.844577+00:00] doctrine.DEBUG: Executing statement: UPDATE notification SET is_read = ? WHERE id = ? (parameters: array{"1":1,"2":25}, types: array{"1":0,"2":0}) {"sql":"UPDATE notification SET is_read = ? WHERE id = ?","params":{"1":1,"2":25},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:30:02.846548+00:00] doctrine.DEBUG: Committing transaction [] []
[2024-03-03T20:30:02.853242+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:30:02.858313+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:30:03.013564+00:00] request.INFO: Matched route "app_message_by_id". {"route":"app_message_by_id","route_parameters":{"_route":"app_message_by_id","_controller":"App\\Controller\\MessageController::getMessageById","id":"50"},"request_uri":"http://localhost:8000/messages/id/50","method":"GET"} []
[2024-03-03T20:30:03.049345+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:30:03.049465+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:30:03.163838+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:30:03.171973+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"salim"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"salim"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:30:03.195552+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:30:03.195673+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:30:03.195744+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:30:03.195808+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:30:03.200144+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:30:03.200288+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"salim\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:30:03.203068+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:30:03.203182+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:30:03.203257+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:30:03.216954+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.title AS title_2, t0.photo_url AS photo_url_3, t0.content AS content_4, t0.sender_id AS sender_id_5, t0.receiver_id AS receiver_id_6 FROM message t0 WHERE t0.id = ? (parameters: array{"1":50}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.title AS title_2, t0.photo_url AS photo_url_3, t0.content AS content_4, t0.sender_id AS sender_id_5, t0.receiver_id AS receiver_id_6 FROM message t0 WHERE t0.id = ?","params":{"1":50},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:30:03.228690+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? (parameters: array{"1":8}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ?","params":{"1":8},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:30:03.242267+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:30:03.250618+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:30:04.485550+00:00] request.INFO: Matched route "app_notifications_unread". {"route":"app_notifications_unread","route_parameters":{"_route":"app_notifications_unread","_controller":"App\\Controller\\NotificationController::getUnreadNotifications"},"request_uri":"http://localhost:8000/notifications","method":"GET"} []
[2024-03-03T20:30:04.531670+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:30:04.531802+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:30:04.675381+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:30:04.705211+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"salim"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"salim"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:30:04.727218+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:30:04.727365+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:30:04.727423+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:30:04.727475+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:30:04.732851+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:30:04.732977+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"salim\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:30:04.735557+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:30:04.735665+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:30:04.735729+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:30:04.792582+00:00] doctrine.DEBUG: Executing statement: SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.created_at AS created_at_5, n0_.receiver_id AS receiver_id_6 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ? (parameters: array{"1":7,"2":0}, types: array{"1":0,"2":0}) {"sql":"SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.created_at AS created_at_5, n0_.receiver_id AS receiver_id_6 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ?","params":{"1":7,"2":0},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:30:04.798221+00:00] app.INFO: Unread Notifications: [] []
[2024-03-03T20:30:04.803756+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:30:04.808086+00:00] doctrine.INFO: Disconnecting [] []
[2024-03-03T20:30:30.384905+00:00] request.INFO: Matched route "app_notifications_unread". {"route":"app_notifications_unread","route_parameters":{"_route":"app_notifications_unread","_controller":"App\\Controller\\NotificationController::getUnreadNotifications"},"request_uri":"http://localhost:8000/notifications","method":"GET"} []
[2024-03-03T20:30:30.469417+00:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"api","authenticators":1} []
[2024-03-03T20:30:30.470313+00:00] security.DEBUG: Checking support on authenticator. {"firewall_name":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:30:30.759618+00:00] doctrine.INFO: Connecting with parameters array{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"} {"params":{"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"SW","serverVersion":"11.2.2","charset":"utf8mb4"}} []
[2024-03-03T20:30:30.768290+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1 (parameters: array{"1":"salim"}, types: array{"1":0}) {"sql":"SELECT t0.id AS id_1, t0.username AS username_2, t0.email AS email_3, t0.password AS password_4 FROM user t0 WHERE t0.username = ? LIMIT 1","params":{"1":"salim"},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:30:30.793685+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserProviderListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserProviderListener::checkPassport"} []
[2024-03-03T20:30:30.793834+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CsrfProtectionListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CsrfProtectionListener::checkPassport"} []
[2024-03-03T20:30:30.793910+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::preCheckCredentials". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::preCheckCredentials"} []
[2024-03-03T20:30:30.793992+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\CheckPassportEvent" to listener "Symfony\Component\Security\Http\EventListener\CheckCredentialsListener::checkPassport". {"event":"Symfony\\Component\\Security\\Http\\Event\\CheckPassportEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\CheckCredentialsListener::checkPassport"} []
[2024-03-03T20:30:30.801062+00:00] app.DEBUG: Notified event "security.authentication.success" to listener "Symfony\Component\Security\Http\EventListener\UserCheckerListener::postCheckCredentials". {"event":"security.authentication.success","listener":"Symfony\\Component\\Security\\Http\\EventListener\\UserCheckerListener::postCheckCredentials"} []
[2024-03-03T20:30:30.801281+00:00] security.INFO: Authenticator successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\Token\\JWTPostAuthenticationToken":"JWTPostAuthenticationToken(user=\"salim\", roles=\"\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:30:30.806752+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\SessionStrategyListener::onSuccessfulLogin". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\SessionStrategyListener::onSuccessfulLogin"} []
[2024-03-03T20:30:30.806920+00:00] app.DEBUG: Notified event "Symfony\Component\Security\Http\Event\LoginSuccessEvent" to listener "Symfony\Component\Security\Http\EventListener\PasswordMigratingListener::onLoginSuccess". {"event":"Symfony\\Component\\Security\\Http\\Event\\LoginSuccessEvent","listener":"Symfony\\Component\\Security\\Http\\EventListener\\PasswordMigratingListener::onLoginSuccess"} []
[2024-03-03T20:30:30.807014+00:00] security.DEBUG: Authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authenticator\\JWTAuthenticator"} []
[2024-03-03T20:30:30.917186+00:00] doctrine.DEBUG: Executing statement: SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.created_at AS created_at_5, n0_.receiver_id AS receiver_id_6 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ? (parameters: array{"1":7,"2":0}, types: array{"1":0,"2":0}) {"sql":"SELECT n0_.id AS id_0, n0_.message AS message_1, n0_.is_read AS is_read_2, n0_.message_id AS message_id_3, n0_.message_title AS message_title_4, n0_.created_at AS created_at_5, n0_.receiver_id AS receiver_id_6 FROM notification n0_ WHERE n0_.receiver_id = ? AND n0_.is_read = ?","params":{"1":7,"2":0},"types":{"1":{"Doctrine\\DBAL\\ParameterType":0},"2":{"Doctrine\\DBAL\\ParameterType":0}}} []
[2024-03-03T20:30:30.922545+00:00] app.INFO: Unread Notifications: [] []
[2024-03-03T20:30:30.931831+00:00] security.DEBUG: Stored the security token in the session. {"key":"_security_api"} []
[2024-03-03T20:30:30.937490+00:00] doctrine.INFO: Disconnecting [] []
